<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BinanceAPI.NET</name>
    </assembly>
    <members>
        <member name="T:BinanceAPI.Attributes.JsonConversionAttribute">
            <summary>
            Used for conversion in ArrayConverter
            </summary>
        </member>
        <member name="T:BinanceAPI.Attributes.JsonOptionalPropertyAttribute">
            <summary>
            Marks property as optional
            </summary>
        </member>
        <member name="T:BinanceAPI.Authentication.ApiCredentials">
            <summary>
            Api credentials info
            </summary>
        </member>
        <member name="P:BinanceAPI.Authentication.ApiCredentials.Key">
            <summary>
            The api key to authenticate requests
            </summary>
        </member>
        <member name="P:BinanceAPI.Authentication.ApiCredentials.Secret">
            <summary>
            The api secret to authenticate requests
            </summary>
        </member>
        <member name="M:BinanceAPI.Authentication.ApiCredentials.#ctor(System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Create Api credentials providing an api key and secret for authentication
            </summary>
            <param name="key">The api key used for identification</param>
            <param name="secret">The api secret used for signing</param>
        </member>
        <member name="M:BinanceAPI.Authentication.ApiCredentials.#ctor(System.String,System.String)">
            <summary>
            Create Api credentials providing an api key and secret for authentication
            <para>You should use <see href="ApiCredentials(SecureString key, SecureString secret)"/> instead</para>
            <para>BOTH KEYS WILL BE AUTOMATICALLY CONVERTED INTO A SECURE STRING</para>
            </summary>
            <param name="key">The api key used for identification</param>
            <param name="secret">The api secret used for signing</param>
        </member>
        <member name="M:BinanceAPI.Authentication.ApiCredentials.Dispose">
            <summary>
            Dispose is really Destroy
            <para>You shouldn't do this unless you really mean it, it would be better to create new credentials instead</para>
            </summary>
        </member>
        <member name="T:BinanceAPI.Authentication.AuthenticationProvider">
            <summary>
            Base class for authentication providers
            </summary>
        </member>
        <member name="P:BinanceAPI.Authentication.AuthenticationProvider.Credentials">
            <summary>
            The provided credentials
            </summary>
        </member>
        <member name="M:BinanceAPI.Authentication.AuthenticationProvider.#ctor(BinanceAPI.Authentication.ApiCredentials)">
            <summary>
            ctor
            </summary>
            <param name="credentials"></param>
        </member>
        <member name="M:BinanceAPI.Authentication.AuthenticationProvider.AddAuthenticationToParameters(System.String,System.Net.Http.HttpMethod,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,BinanceAPI.Enums.HttpMethodParameterPosition,BinanceAPI.Enums.ArrayParametersSerialization)">
            <summary>
            Add authentication to the parameter list based on the provided credentials
            </summary>
            <param name="uri">The uri the request is for</param>
            <param name="method">The HTTP method of the request</param>
            <param name="parameters">The provided parameters for the request</param>
            <param name="signed">Wether or not the request needs to be signed. If not typically the parameters list can just be returned</param>
            <param name="parameterPosition">Where parameters are placed, in the URI or in the request body</param>
            <param name="arraySerialization">How array parameters are serialized</param>
            <returns>Should return the original parameter list including any authentication parameters needed</returns>
        </member>
        <member name="M:BinanceAPI.Authentication.AuthenticationProvider.AddAuthenticationToHeaders(System.String,System.Net.Http.HttpMethod,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,BinanceAPI.Enums.HttpMethodParameterPosition,BinanceAPI.Enums.ArrayParametersSerialization)">
            <summary>
            Add authentication to the header dictionary based on the provided credentials
            </summary>
            <param name="uri">The uri the request is for</param>
            <param name="method">The HTTP method of the request</param>
            <param name="parameters">The provided parameters for the request</param>
            <param name="signed">Wether or not the request needs to be signed. If not typically the parameters list can just be returned</param>
            <param name="parameterPosition">Where post parameters are placed, in the URI or in the request body</param>
            <param name="arraySerialization">How array parameters are serialized</param>
            <returns>Should return a dictionary containing any header key/value pairs needed for authenticating the request</returns>
        </member>
        <member name="M:BinanceAPI.Authentication.AuthenticationProvider.ByteToString(System.Byte[])">
            <summary>
            Convert byte array to hex
            </summary>
            <param name="buff"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Authentication.AuthenticationProvider.Dispose">
            <summary>
            Dispose the Authentication Provider
            </summary>
        </member>
        <member name="T:BinanceAPI.BinanceHelpers">
            <summary>
            Helper methods for the Binance API
            </summary>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.UsedWeight(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.UsedOrderCount(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}})">
            <summary>
            Get the used weight from the response headers
            </summary>
            <param name="headers"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.ClampQuantity(System.Decimal,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a quantity between a min and max quantity and floor to the closest step
            </summary>
            <param name="minQuantity"></param>
            <param name="maxQuantity"></param>
            <param name="stepSize"></param>
            <param name="quantity"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.ClampPrice(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a price between a min and max price
            </summary>
            <param name="minPrice"></param>
            <param name="maxPrice"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.FloorPrice(System.Decimal,System.Decimal)">
            <summary>
            Floor a price to the closest tick
            </summary>
            <param name="tickSize"></param>
            <param name="price"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.BinanceHelpers.Floor(System.Decimal)">
            <summary>
            Floor
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.ClientBase.BaseClient">
            <summary>
            The base for all clients, websocket client and rest client
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseClient.IsAuthenticationSet">
            <summary>
            Has the the Authentication Provider been set
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseClient.ChangeEndpoint">
            <summary>
            Change which API Endpoint Controller to use for Requests
            <para>Default is API1</para>
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseClient.#ctor(BinanceAPI.Options.ClientOptions)">
            <summary>
            ctor
            </summary>
            <param name="options">The options for this client</param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseClient.SetAuthentication(System.String,System.String)">
            <summary>
            Set API Credentials to be used for Authentication
            <para>The strings will be converted into Secure Strings</para>
            </summary>
            <param name="apiKey"></param>
            <param name="apiSecret"></param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseClient.SetAuthentication(System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Set API Credentials to be used for Authentication using Secure Strings
            </summary>
            <param name="apiKey"></param>
            <param name="apiSecret"></param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseClient.NextId">
            <summary>
            Generate a new unique id. The id is staticly stored so it is guarenteed to be unique across different client instances
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseClient.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:BinanceAPI.ClientBase.BaseSocketClient">
            <summary>
            The Base Socket Client
            <para>Created Automatically when you Subscribe to a SocketSubscription</para>
            <para>Wraps the Underlying ClientWebSocket</para>
            </summary>
        </member>
        <member name="E:BinanceAPI.ClientBase.BaseSocketClient.ConnectionRestored">
            <summary>
            Connectiion restored event
            </summary>
        </member>
        <member name="E:BinanceAPI.ClientBase.BaseSocketClient.ConnectionStatusChanged">
            <summary>
            Occurs when the status of the socket changes
            </summary>
        </member>
        <member name="E:BinanceAPI.ClientBase.BaseSocketClient.UnhandledMessage">
            <summary>
            Unhandled message event
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.ClientSocket">
            <summary>
            The Real Underlying Socket
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.SocketConnectionStatus">
            <summary>
            The Current Status of the Socket Connection
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.ShouldAttemptConnection">
            <summary>
            If the socket should be reconnected upon closing
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.DisconnectTime">
            <summary>
            Time of disconnecting
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.LastActionTime">
            <summary>
            The timestamp this socket has been active for the last time
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.Id">
            <summary>
            The id of this socket
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.Url">
            <summary>
            Url this socket connects to
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.IsClosing">
            <summary>
            If the connection is closing
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.IsOpen">
            <summary>
            If the connection is open
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.Encoding">
            <summary>
            Encoding used for decoding the received bytes into a string
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.#ctor(System.String,BinanceAPI.ClientHosts.SocketClientHost,BinanceAPI.Objects.ApiProxy)">
            <summary>
            The Base Client for handling a SocketSubscription
            </summary>
            <param name="url">The url the socket should connect to</param>
            <param name="client"></param>
            <param name="proxy"></param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.AddSubscription(BinanceAPI.Sockets.SocketSubscription)">
            <summary>
            Add subscription to this connection
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.GetSubscription">
            <summary>
            Get the subscription on this connection
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.SendAndWaitAsync``1(``0,System.TimeSpan,System.Func{Newtonsoft.Json.Linq.JToken,System.Boolean})">
            <summary>
            Send data and wait for an answer
            </summary>
            <typeparam name="T">The data type expected in response</typeparam>
            <param name="obj">The object to send</param>
            <param name="timeout">The timeout for response</param>
            <param name="handler">The response handler</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.Send``1(``0,Newtonsoft.Json.NullValueHandling)">
            <summary>
            Send data over the websocket connection
            </summary>
            <typeparam name="T">The type of the object to send</typeparam>
            <param name="obj">The object to send</param>
            <param name="nullValueHandling">How null values should be serialized</param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.CloseAndDisposeSubscriptionAsync(BinanceAPI.Sockets.SocketSubscription)">
            <summary>
            Closes the subscription on this connection
            <para>Closes the connection if the correct subscription is provided</para>
            </summary>
            <param name="subscription">Subscription to close</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.NewSocket(System.Boolean)">
            <summary>
            Create the socket object
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.SetProxy(BinanceAPI.Objects.ApiProxy)">
            <summary>
            Set a proxy to use. Should be set before connecting
            </summary>
            <param name="proxy"></param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.ConnectAsync">
            <summary>
            Connect the websocket
            </summary>
            <returns>True if successfull</returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.Send(System.String)">
            <summary>
            Send data over the websocket
            </summary>
            <param name="data">Data to send</param>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.SendLoopAsync">
            <summary>
            Loop for sending data
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.ReceiveLoopAsync">
            <summary>
            Loop for receiving and reassembling data
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.InternalConnectSocketAsync">
            <summary>
            Connect the Socket
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.InternalResetSocketAsync(System.Boolean)">
            <summary>
            Internal reset method, Will prepare the socket to be reset so it can be automatically reconnected or closed permanantly
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientBase.BaseSocketClient.DisposeAsync">
            <summary>
            Close and Dispose the Socket and all Message Handlers
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.SSLProtocols">
            <inheritdoc/>
        </member>
        <member name="P:BinanceAPI.ClientBase.BaseSocketClient.IncomingKbps">
            <inheritdoc/>
        </member>
        <member name="T:BinanceAPI.Converters.ArrayConverter">
            <summary>
            Converter for arrays to objects. Can deserialize data like [0.1, 0.2, "test"] to an object. Mapping is done by marking the class with [JsonConverter(typeof(ArrayConverter))] and the properties
            with [ArrayProperty(x)] where x is the index of the property in the array
            </summary>
        </member>
        <member name="M:BinanceAPI.Converters.ArrayConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.ArrayConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.ArrayConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Converters.ArrayPropertyAttribute">
            <summary>
            Mark property as an index in the array
            </summary>
        </member>
        <member name="P:BinanceAPI.Converters.ArrayPropertyAttribute.Index">
            <summary>
            The index in the array
            </summary>
        </member>
        <member name="M:BinanceAPI.Converters.ArrayPropertyAttribute.#ctor(System.Int32)">
            <summary>
            ctor
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:BinanceAPI.Converters.BaseConverter`1">
            <summary>
            Base class for enum converters
            </summary>
            <typeparam name="T">Type of enum to convert</typeparam>
        </member>
        <member name="P:BinanceAPI.Converters.BaseConverter`1.Mapping">
            <summary>
            The enum->string mapping
            </summary>
        </member>
        <member name="M:BinanceAPI.Converters.BaseConverter`1.#ctor(System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="useQuotes"></param>
        </member>
        <member name="M:BinanceAPI.Converters.BaseConverter`1.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.BaseConverter`1.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.BaseConverter`1.ReadString(System.String)">
            <summary>
            Convert a string value
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Converters.BaseConverter`1.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Converters.TimestampConverter">
            <summary>
            converter for milliseconds to datetime
            </summary>
        </member>
        <member name="M:BinanceAPI.Converters.TimestampConverter.CanConvert(System.Type)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.TimestampConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Converters.TimestampConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Enums.AccountType">
            <summary>
            Type of account
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.Spot">
            <summary>
            Spot account type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.Margin">
            <summary>
            Margin account type
            </summary>>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.Futures">
            <summary>
            Futures account type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.Leveraged">
            <summary>
            Leveraged account type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.TRD_GRP_002">
            <summary>
            See https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#enum-definitions
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.TRD_GRP_003">
            <summary>
            See https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#enum-definitions
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AccountType.TRD_GRP_004">
            <summary>
            See https://github.com/binance/binance-spot-api-docs/blob/master/rest-api.md#enum-definitions
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.AdjustRateDirection">
            <summary>
            Rate direction
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AdjustRateDirection.Additional">
            <summary>
            Additional
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.AdjustRateDirection.Reduced">
            <summary>
            Reduced
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ArrayParametersSerialization">
            <summary>
            Define how array parameters should be send
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ArrayParametersSerialization.MultipleValues">
            <summary>
            Send multiple key=value for each entry
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ArrayParametersSerialization.Array">
            <summary>
            Create an []=value array
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ConnectionStatus">
            <summary>
            The current Sockets connection status
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Disconnected">
            <summary>
            Disconnected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Connecting">
            <summary>
            Currently Connecting
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Connected">
            <summary>
            Currently Connected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Lost">
            <summary>
            Connection was Lost
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Closed">
            <summary>
            Connection was Closed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Error">
            <summary>
            Connection encountered an Error
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ConnectionStatus.Waiting">
            <summary>
            Waiting for reconnect attempt
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.DepositStatus">
            <summary>
            The status of a deposit
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.DepositStatus.Pending">
            <summary>
            Pending
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.DepositStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.DepositStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ExecutionType">
            <summary>
            The type of execution
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Replaced">
            <summary>
            Replaced
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ExecutionType.Amendment">
            <summary>
            Amendment
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.FiatPaymentStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatPaymentStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatPaymentStatus.Completed">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatPaymentStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatPaymentStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.FiatWithdrawDepositStatus">
            <summary>
            Status of a fiat payment
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Processing">
            <summary>
            Still processing
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Successful">
            <summary>
            Successfully completed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Finished">
            <summary>
            Finished
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Refunding">
            <summary>
            Refunding
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Refunded">
            <summary>
            Refunded
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.RefundFailed">
            <summary>
            Refund failed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.FiatWithdrawDepositStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.HttpMethodParameterPosition">
            <summary>
            Where the parameters for a HttpMethod should be added in a request
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.HttpMethodParameterPosition.InBody">
            <summary>
            Parameters in body
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.HttpMethodParameterPosition.InUri">
            <summary>
            Parameters in url
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.IndicatorType">
            <summary>
            Types of indicators
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.IndicatorType.UnfilledRatio">
            <summary>
            Unfilled ratio
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.IndicatorType.ExpirationRatio">
            <summary>
            Expired orders ratio
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.IndicatorType.CancellationRatio">
            <summary>
            Cancelled orders ratio
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.IsolatedMarginTransferDirection">
            <summary>
            Transfer direction for isolated margin transfer
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.IsolatedMarginTransferDirection.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.IsolatedMarginTransferDirection.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.KlineInterval">
            <summary>
            The interval for the kline, the int value represents the time in seconds
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.ThreeMinutes">
            <summary>
            3m
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.TwoHour">
            <summary>
            2h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.FourHour">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.SixHour">
            <summary>
            6h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.EightHour">
            <summary>
            8h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.TwelveHour">
            <summary>
            12h
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.ThreeDay">
            <summary>
            3d
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.KlineInterval.OneMonth">
            <summary>
            1M
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.LendingType">
            <summary>
            Lending type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.LendingType.Daily">
            <summary>
            Flexible
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.LendingType.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.LendingType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ListOrderStatus">
            <summary>
            List order status
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListOrderStatus.Executing">
            <summary>
            Executing
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListOrderStatus.Done">
            <summary>
            Executed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListOrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ListStatusType">
            <summary>
            List status type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListStatusType.Response">
            <summary>
            Failed action
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListStatusType.ExecutionStarted">
            <summary>
            Placed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ListStatusType.Done">
            <summary>
            Order list is done
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.MarginLevelStatus">
            <summary>
            Margin level status
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginLevelStatus.Excessive">
            <summary>
            Excessive
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginLevelStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginLevelStatus.MarginCall">
            <summary>
            Margin call
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginLevelStatus.PreLiquidation">
            <summary>
            Pre-liquidation
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginLevelStatus.ForceLiquidation">
            <summary>
            Force liquidation
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.MarginStatus">
            <summary>
            Status of a margin action
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginStatus.Pending">
            <summary>
            Pending to execution
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginStatus.Completed">
            <summary>
            Executed, waiting to be confirmed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginStatus.Confirmed">
            <summary>
            Successfully loaned/repayed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.MarginStatus.Failed">
            <summary>
            execution failed, nothing happened to your account
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderBookEntryType">
            <summary>
            Order book entry type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderBookEntryType.Ask">
            <summary>
            Ask
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderBookEntryType.Bid">
            <summary>
            Bid
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderRejectReason">
            <summary>
            The reason the order was rejected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.None">
            <summary>
            Not rejected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.UnknownInstrument">
            <summary>
            Unknown instrument
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.MarketClosed">
            <summary>
            Closed market
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.PriceQuantityExceedsHardLimits">
            <summary>
            Quantity out of bounds
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.UnknownOrder">
            <summary>
            Unknown order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.DuplicateOrder">
            <summary>
            Duplicate
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.UnknownAccount">
            <summary>
            Unkown account
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.InsufficientBalance">
            <summary>
            Not enough balance
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.AccountInactive">
            <summary>
            Account not active
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderRejectReason.AccountCannotSettle">
            <summary>
            Cannot settle
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderResponseType">
            <summary>
            Response type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderResponseType.Acknowledge">
            <summary>
            Ack only
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderResponseType.Result">
            <summary>
            Resulting order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderResponseType.Full">
            <summary>
            Full order info, only valid on SPOT orders
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderSide">
            <summary>
            The side of an order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderStatus">
            <summary>
            The status of an order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.New">
            <summary>
            Order is new
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Order is partly filled, still has quantity left to fill
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Filled">
            <summary>
            The order has been filled and completed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Canceled">
            <summary>
            The order has been canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.PendingCancel">
            <summary>
            The order is in the process of being canceled  (currently unused)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Rejected">
            <summary>
            The order has been rejected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Expired">
            <summary>
            The order has expired
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Insurance">
            <summary>
            Liquidation with Insurance Fund
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderStatus.Adl">
            <summary>
            Counterparty Liquidation
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.OrderType">
            <summary>
            The type of an order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.Limit">
            <summary>
            Limit orders will be placed at a specific price. If the price isn't available in the order book for that asset the order will be added in the order book for someone to fill.
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.Market">
            <summary>
            Market order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.StopLoss">
            <summary>
            Stop loss order. Will execute a market order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.StopLossLimit">
            <summary>
            Stop loss order. Will execute a limit order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.Stop">
            <summary>
            Stop loss order. Will execute a market order when the price drops below a price to sell and therefor limit the loss
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.StopMarket">
            <summary>
            Stop loss order. Will be executed at the best price available at that time in the order book
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.TakeProfit">
            <summary>
            Take profit order. Will execute a market order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.TakeProfitMarket">
            <summary>
            Take profit order. Will be executed at the best price available at that time in the order book
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.TakeProfitLimit">
            <summary>
            Take profit order. Will execute a limit order when the price rises above a price to sell and therefor take a profit
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.LimitMaker">
            <summary>
            Same as a limit order, however it will fail if the order would immediately match, therefor preventing taker orders
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.TrailingStopMarket">
            <summary>
            Trailing stop order will be placed without a price. The order will be executed at the best price available at that time in the order book.
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.OrderType.Liquidation">
             <summary>
            
             </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ProductStatus">
            <summary>
            Status of a product
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProductStatus.All">
            <summary>
            All products
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProductStatus.Subscribable">
            <summary>
            Products which are subscribable
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProductStatus.Unsubscribable">
            <summary>
            Products which are unsubscribable
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ProjectStatus">
            <summary>
            Project status
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProjectStatus.Holding">
            <summary>
            Holding
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProjectStatus.Redeemed">
            <summary>
            Redeemed
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.ProjectType">
            <summary>
            The type of project
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProjectType.Activity">
            <summary>
            Regular
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.ProjectType.CustomizedFixed">
            <summary>
            Customized fixed
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.RedeemType">
            <summary>
            Redeem type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.RedeemType.Fast">
            <summary>
            Fast
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.RedeemType.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.RoundingType">
            <summary>
            How to round
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.RoundingType.Down">
            <summary>
            Round down (flooring)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.RoundingType.Closest">
            <summary>
            Round to closest value
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.SideEffectType">
            <summary>
            Side effect for a margin order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SideEffectType.NoSideEffect">
            <summary>
            Normal trade
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SideEffectType.MarginBuy">
            <summary>
            Margin trade order
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SideEffectType.AutoRepay">
            <summary>
            Make auto repayment after order is filled
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.SymbolFilterType">
            <summary>
            Filter type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.Unknown">
            <summary>
            Unknown filter type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.Price">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.PricePercent">
            <summary>
            Price percent filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.LotSize">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.MarketLotSize">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.MinNotional">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.MaxNumberOrders">
            <summary>
            Max orders filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.MaxNumberAlgorithmicOrders">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.IcebergParts">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.MaxPosition">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.TrailingDelta">
            <summary>
            Trailing delta filter
            </summary>,
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.IcebergOrders">
            <summary>
            Max Iceberg Orders filter
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolFilterType.Notional">
            <summary>
            The NOTIONAL filter defines the acceptable notional range allowed for an order on a symbol.
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.SymbolStatus">
            <summary>
            Status of a symbol
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.PreTrading">
            <summary>
            Not trading yet
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.PendingTrading">
            <summary>
            Pending trading
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Trading">
            <summary>
            Trading
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.PostTrading">
            <summary>
            No longer trading
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.EndOfDay">
            <summary>
            Not trading
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Halt">
            <summary>
            Halted
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.AuctionMatch">
             <summary>
            
             </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Break">
             <summary>
            
             </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Close">
            <summary>
            Closed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.PreDelivering">
            <summary>
            Pre delivering
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.PreSettle">
            <summary>
            Pre settle
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SymbolStatus.Settling">
            <summary>
            Settings
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.SystemStatus">
            <summary>
            Status of the Binance system
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SystemStatus.Normal">
            <summary>
            Operational
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.SystemStatus.Maintenance">
            <summary>
            In maintenance
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.TimeInForce">
            <summary>
            The time the order will be active for
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TimeInForce.GoodTillCancel">
            <summary>
            GoodTillCancel orders will stay active until they are filled or canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            ImmediateOrCancel orders have to be at least partially filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TimeInForce.FillOrKill">
            <summary>
            FillOrKill orders have to be entirely filled upon placing or will be automatically canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TimeInForce.GoodTillCrossing">
            <summary>
            GoodTillCrossing orders will post only
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TimeInForce.GoodTillExpiredOrCanceled">
            <summary>
            Good til the order expires or is canceled
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransactionType.Withdrawal">
            <summary>
            Withdrawal
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.TransferDirection">
            <summary>
            Direction of a transfer
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransferDirection.RollIn">
            <summary>
            Roll-in
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransferDirection.RollOut">
            <summary>
            Roll-out
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.TransferDirectionType">
            <summary>
            Transfer direction
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransferDirectionType.MainToMargin">
            <summary>
            From main account to margin account
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.TransferDirectionType.MarginToMain">
            <summary>
            From margin account to main account
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.UniversalTransferType">
            <summary>
            Universal transfer type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MainToFunding">
            <summary>
            Main (spot) to Funding
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MainToUsdFutures">
            <summary>
            Main (spot) to Usd Futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MainToCoinFutures">
            <summary>
            Main (spot) to Coin Futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MainToMargin">
            <summary>
            Main (spot) to Margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MainToMining">
            <summary>
            Main (spot) to Mining
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.FundingToMain">
            <summary>
            Funding to Main (spot)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.FundingToUsdFutures">
            <summary>
            Funding to Usd futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.FundingToMargin">
            <summary>
            Funding to margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.UsdFuturesToMain">
            <summary>
            Usd futures to Main (spot)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.UsdFuturesToFunding">
            <summary>
            Usd futures to Funding
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.UsdFuturesToMargin">
            <summary>
            Usd futures to Margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.CoinFuturesToMain">
            <summary>
            Coin futures to Main (spot)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.CoinFuturesToMargin">
            <summary>
            Coin futures to Margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToMain">
            <summary>
            Margin to Main (spot)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToUsdFutures">
            <summary>
            Margin to Usd futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToCoinFutures">
            <summary>
            Margin to Coin futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToMining">
            <summary>
            Margin to Mining
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToFunding">
            <summary>
            Margin to Funding
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.IsolatedMarginToMargin">
            <summary>
            Isolated margin to margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MarginToIsolatedMargin">
            <summary>
            Margin to isolated margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.IsolatedMarginToIsolatedMargin">
            <summary>
            Isolated margin to Isolated margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MiningToMain">
            <summary>
            Mining to Main (spot)
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MiningToUsdFutures">
            <summary>
            Mining to Usd futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.MiningToMargin">
            <summary>
            Mining to Margin
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.FundingToCoinFutures">
            <summary>
            Funding to Coin futures
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.UniversalTransferType.CoinFuturesToFunding">
            <summary>
            Coin futures to Funding
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.WithdrawalStatus">
            <summary>
            The status of a withdrawal
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.EmailSend">
            <summary>
            Email has been send
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.Canceled">
            <summary>
            Withdrawal has been canceled
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.AwaitingApproval">
            <summary>
            Withdrawal is awaiting approval
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.Rejected">
            <summary>
            Withdrawal has been rejected
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.Processing">
            <summary>
            Withdrawal is processing
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.Failure">
            <summary>
            Withdrawal has failed
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawalStatus.Completed">
            <summary>
            Withdrawal has been processed
            </summary>
        </member>
        <member name="T:BinanceAPI.Enums.WithdrawDepositTransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawDepositTransferType.Internal">
            <summary>
            Internal transfer
            </summary>
        </member>
        <member name="F:BinanceAPI.Enums.WithdrawDepositTransferType.External">
            <summary>
            External transfer
            </summary>
        </member>
        <member name="T:BinanceAPI.ApiEndpoint">
            <summary>
            The Binance API End Points
            </summary>
        </member>
        <member name="F:BinanceAPI.ApiEndpoint.DEFAULT">
            <summary>
            API.Binance.com
            </summary>
        </member>
        <member name="F:BinanceAPI.ApiEndpoint.ONE">
            <summary>
            API1.Binance.com
            </summary>
        </member>
        <member name="F:BinanceAPI.ApiEndpoint.TWO">
            <summary>
            API2.Binance.com
            </summary>
        </member>
        <member name="F:BinanceAPI.ApiEndpoint.THREE">
            <summary>
            API3.Binance.com
            </summary>
        </member>
        <member name="F:BinanceAPI.ApiEndpoint.TEST">
            <summary>
            TESTNET.Binance.com
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.OrderBookStatus">
            <summary>
            Status of the order book
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.OrderBookStatus.Disconnected">
            <summary>
            Not connected
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.OrderBookStatus.Connecting">
            <summary>
            Connecting
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.OrderBookStatus.Reconnecting">
            <summary>
            Reconnecting
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.OrderBookStatus.Syncing">
            <summary>
            Syncing data
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.OrderBookStatus.Synced">
            <summary>
            Data synced, order book is up to date
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.RequestBodyFormat">
            <summary>
            The format of the request body
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.RequestBodyFormat.FormData">
            <summary>
            Form data
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.RequestBodyFormat.Json">
            <summary>
            Json
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceCombinedStream`1">
            <summary>
            Represents the binance result for combined data on a single socket connection
            See on https://github.com/binance-exchange/binance-official-api-docs/blob/master/web-socket-streams.md
            Combined streams
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceCombinedStream`1.Stream">
            <summary>
            The stream combined
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceCombinedStream`1.Data">
            <summary>
            The data of stream
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceOrderBookEntry">
            <summary>
            An entry in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookEntry.Price">
            <summary>
            The price of this order book entry
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookEntry.Quantity">
            <summary>
            The quantity of this price in the order book
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceQueryRecords`1">
            <summary>
            Query results
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceQueryRecords`1.Rows">
            <summary>
            The list records
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceQueryRecords`1.Total">
            <summary>
            The total count of the records
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceResult">
            <summary>
            Query result
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceResult.Code">
            <summary>
            Result code
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceResult`1">
            <summary>
            Query result
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceResult`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceStreamEvent">
            <summary>
            A event received by a Binance websocket
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceStreamEvent.Event">
            <summary>
            The type of the event
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceStreamEvent.EventTime">
            <summary>
            The time the event happened
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Fiat.BinanceFiatPayment">
            <summary>
            Fiat payment info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.OrderNumber">
            <summary>
            Order number
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.SourceAmount">
            <summary>
            The input amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.FiatCurrency">
            <summary>
            The fiat currency
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.ObtainAmount">
            <summary>
            The output amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.CryptoCurrency">
            <summary>
            The crypto currency
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.TotalFee">
            <summary>
            The total fee of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatPayment.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit">
            <summary>
            Fiat payment info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.OrderNumber">
            <summary>
            Order number
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.FiatCurrency">
            <summary>
            The used currency
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.IndicatedAmount">
            <summary>
            The indicated amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.Method">
            <summary>
            The crypto currency
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.TotalFee">
            <summary>
            The total fee of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Fiat.BinanceFiatWithdrawDeposit.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceClientHostOptions">
            <summary>
            Options for the binance client
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceClientHostOptions.TimeLogPath">
            <summary>
            Path to the Time Log
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceClientHostOptions.ReceiveWindow">
            <summary>
            The default receive window for requests
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceClientHostOptions.SyncUpdateTime">
            <summary>
            The rate at which the Server Time Should be Synced in Minutes
            <para><see cref="F:BinanceAPI.ServerTimeClient.LoopToken"/> can be cancelled to stop syncing</para>
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.BinanceOrderBookOptions">
            <summary>
            Binance symbol order book options
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookOptions.RestClient">
            <summary>
            The rest client to use for requesting the initial order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookOptions.SocketClient">
            <summary>
            The client to use for the socket connection. When using the same client for multiple order books the connection can be shared.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookOptions.Limit">
            <summary>
            The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.BinanceOrderBookOptions.UpdateInterval">
            <summary>
            Update interval in milliseconds, either 100 or 1000. Defaults to 1000
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.BinanceOrderBookOptions.#ctor(System.Nullable{System.Int32},System.Nullable{System.Int32},BinanceAPI.ClientHosts.SocketClientHost,BinanceAPI.ClientHosts.BinanceClientHost,System.String,SimpleLog4.NET.LogLevel,System.Boolean)">
            <summary>
            Create new options
            </summary>
            <param name="limit">The top amount of results to keep in sync. If for example limit=10 is used, the order book will contain the 10 best bids and 10 best asks. Leaving this null will sync the full order book</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000. Defaults to 1000</param>
            <param name="socketClient">The client to use for the socket connection. When using the same client for multiple order books the connection can be shared.</param>
            <param name="restClient">The rest client to use for requesting the initial order book.</param>
            <param name="logPath">Path to the log</param>
            <param name="logLevel">Log level for the log</param>
            <param name="logToConsole">Ture if messages should also be logged to the console</param>
        </member>
        <member name="T:BinanceAPI.Objects.SocketClientHostOptions">
            <summary>
            Binance socket client options
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.SocketClientHostOptions.MaxReconnectTries">
            <summary>
            The maximum number of times to try to reconnect
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.SocketClientHostOptions.MaxConcurrentResubscriptionsPerSocket">
            <summary>
            Max number of concurrent resubscription tasks per socket after reconnecting a socket
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions">
            <summary>
            Permissions of the current API key
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.IpRestrict">
            <summary>
            Whether the key is restricted to certain IP's or not
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.CreateTime">
            <summary>
            Creation time of the key
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableWithdrawals">
            <summary>
            This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.PermitUniversalTransfer">
            <summary>
            This option authorizes this key to transfer funds between your master account and your sub account instantly
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableInternalTransfer">
            <summary>
            Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableVanillaOptions">
            <summary>
            Authorizes this key to Vanilla options trading
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableReading">
            <summary>
            Authorizes the reading of account info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableFutures">
            <summary>
            Authorizes futures trading. API Key created before your futures account opened does not support futures API service
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableMargin">
            <summary>
            Authorizes margin. This option can be adjusted after the Cross Margin account transfer is completed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.EnableSpotAndMarginTrading">
            <summary>
            Spot and margin trading allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceAPIKeyPermissions.TradingAuthorityExpirationTime">
            <summary>
            Expiration time for spot and margin trading permission
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Other.BinanceProduct">
            <summary>
            Info on a product
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.Symbol">
            <summary>
            Name of the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.Status">
            <summary>
            Status of the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.BaseAsset">
            <summary>
            Name of the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.QuoteAsset">
            <summary>
            Name of the quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.BaseAssetChar">
            <summary>
            Char of the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.QuoteAssetChar">
            <summary>
            Char of the quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.BaseAssetName">
            <summary>
            Base asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.QuoteAssetName">
            <summary>
            Quote asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.Open">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.High">
            <summary>
            High price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.Low">
            <summary>
            Low price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.Close">
            <summary>
            Close price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.BaseVolume">
            <summary>
            Base volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.QuoteVolume">
            <summary>
            Quote volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Other.BinanceProduct.CirculatingSupply">
            <summary>
            Amount of coins in circulation
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Shared.Binance24HPriceBase">
            <summary>
            24 hour rolling window price data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.PriceChange">
            <summary>
            The actual price change in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.PriceChangePercent">
            <summary>
            The price change in percentage in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.WeightedAveragePrice">
            <summary>
            The weighted average price in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.LastPrice">
            <summary>
            The most recent trade price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.OpenPrice">
            <summary>
            The open price 24 hours ago
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.HighPrice">
            <summary>
            The highest price in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.LowPrice">
            <summary>
            The lowest price in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.BaseVolume">
            <summary>
            The base volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.QuoteVolume">
            <summary>
            The quote asset volume traded in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.OpenTime">
            <summary>
            Time at which this 24 hours opened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.CloseTime">
            <summary>
            Time at which this 24 hours closed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.FirstTradeId">
            <summary>
            The first trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.LastTradeId">
            <summary>
            The last trade ID in the last 24 hours
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.Binance24HPriceBase.TotalTrades">
            <summary>
            The amount of trades made in the last 24 hours
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Shared.BinanceKlineBase">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.Open">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.High">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.Low">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.Close">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.BaseVolume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.TakerBuyBaseVolume">
            <summary>
            Taker buy base asset volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceKlineBase.TakerBuyQuoteVolume">
            <summary>
            Taker buy quote asset volume
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Shared.BinanceOrderBase">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.OrderId">
            <summary>
            The order id generated by Binance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.OrderListId">
            <summary>
            Id of the order list this order belongs to
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.OriginalClientOrderId">
            <summary>
            Original order id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.ClientOrderId">
            <summary>
            The order id as assigned by the client
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Quantity">
            <summary>
            The original quantity of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.QuantityFilled">
            <summary>
            The currently executed quantity of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.QuoteQuantityFilled">
            <summary>
            Cummulative amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.QuoteQuantity">
            <summary>
            The original quote order quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.TimeInForce">
            <summary>
            How long the order is active
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.StopPrice">
            <summary>
            The stop price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.IcebergQuantity">
            <summary>
            The iceberg quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.CreateTime">
            <summary>
            The time the order was submitted
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.UpdateTime">
            <summary>
            The time the order was last updated
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.IsWorking">
            <summary>
            Is working
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.QuantityRemaining">
            <summary>
            Quantity which is still open to be filled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Shared.BinanceOrderBase.AverageFillPrice">
            <summary>
            The average price the order was filled
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.ApiProxy">
            <summary>
            Proxy info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.ApiProxy.Host">
            <summary>
            The host address of the proxy
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.ApiProxy.Port">
            <summary>
            The port of the proxy
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.ApiProxy.Login">
            <summary>
            The login of the proxy
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.ApiProxy.Password">
            <summary>
            The password of the proxy
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.ApiProxy.#ctor(System.String,System.Int32)">
            <summary>
            Create new settings for a proxy
            </summary>
            <param name="host">The proxy hostname/ip</param>
            <param name="port">The proxy port</param>
        </member>
        <member name="M:BinanceAPI.Objects.ApiProxy.#ctor(System.String,System.Int32,System.String,System.String)">
            <summary>
            Create new settings for a proxy
            </summary>
            <param name="host">The proxy hostname/ip</param>
            <param name="port">The proxy port</param>
            <param name="login">The proxy login</param>
            <param name="password">The proxy password</param>
        </member>
        <member name="M:BinanceAPI.Objects.ApiProxy.#ctor(System.String,System.Int32,System.String,System.Security.SecureString)">
            <summary>
            Create new settings for a proxy
            </summary>
            <param name="host">The proxy hostname/ip</param>
            <param name="port">The proxy port</param>
            <param name="login">The proxy login</param>
            <param name="password">The proxy password</param>
        </member>
        <member name="T:BinanceAPI.Objects.AsyncResetEvent">
            <summary>
            Async auto reset based on Stephen Toub`s implementation
            https://devblogs.microsoft.com/pfxteam/building-async-coordination-primitives-part-2-asyncautoresetevent/
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.AsyncResetEvent.#ctor(System.Boolean,System.Boolean)">
            <summary>
            New AsyncResetEvent
            </summary>
            <param name="initialState"></param>
            <param name="reset"></param>
        </member>
        <member name="M:BinanceAPI.Objects.AsyncResetEvent.WaitAsync(System.Nullable{System.TimeSpan})">
            <summary>
            Wait for the AutoResetEvent to be set
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Objects.AsyncResetEvent.Set">
            <summary>
            Signal a waiter
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.AsyncResetEvent.Dispose">
            <summary>
            Dispose
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.ByteOrderComparer">
            <summary>
            Comparer for byte order
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.ByteOrderComparer.Compare(System.Byte[],System.Byte[])">
            <summary>
            Compare function
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.CallResult">
            <summary>
            The result of an operation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.CallResult.Error">
            <summary>
            An error if the call didn't succeed, will always be filled if Success = false
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.CallResult.Success">
            <summary>
            Whether the call was successful
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.CallResult.#ctor(BinanceAPI.Objects.Error)">
            <summary>
            ctor
            </summary>
            <param name="error"></param>
        </member>
        <member name="T:BinanceAPI.Objects.CallResult`1">
            <summary>
            The result of an operation
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BinanceAPI.Objects.CallResult`1.Data">
            <summary>
            The data returned by the call, only available when Success = true
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.CallResult`1.OriginalData">
            <summary>
            The original data returned by the call, only available when `OutputOriginalData` is set to `true` in the client options
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.CallResult`1.#ctor(`0,BinanceAPI.Objects.Error)">
            <summary>
            ctor
            </summary>
            <param name="data"></param>
            <param name="error"></param>
        </member>
        <member name="M:BinanceAPI.Objects.CallResult`1.op_Implicit(BinanceAPI.Objects.CallResult{`0})~System.Boolean">
            <summary>
            Overwrite bool check so we can use if(callResult) instead of if(callResult.Success)
            </summary>
            <param name="obj"></param>
        </member>
        <member name="M:BinanceAPI.Objects.CallResult`1.CreateErrorResult(BinanceAPI.Objects.Error)">
            <summary>
            Create an error result
            </summary>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.WebCallResult">
            <summary>
            The result of a request
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.WebCallResult.ResponseStatusCode">
            <summary>
            The status code of the response. Note that a OK status does not always indicate success, check the Success parameter for this.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.WebCallResult.ResponseHeaders">
            <summary>
            The response headers
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},BinanceAPI.Objects.Error)">
            <summary>
            ctor
            </summary>
            <param name="code">Status code</param>
            <param name="responseHeaders">Response headers</param>
            <param name="error">Error</param>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult.CreateErrorResult(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},BinanceAPI.Objects.Error)">
            <summary>
            Create an error result
            </summary>
            <param name="code">Status code</param>
            <param name="responseHeaders">Response headers</param>
            <param name="error">Error</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult.CreateErrorResult(BinanceAPI.Objects.WebCallResult)">
            <summary>
            Create an error result
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.WebCallResult`1">
            <summary>
            The result of a request
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:BinanceAPI.Objects.WebCallResult`1.ResponseStatusCode">
            <summary>
            The status code of the response. Note that a OK status does not always indicate success, check the Success parameter for this.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.WebCallResult`1.ResponseHeaders">
            <summary>
            The response headers
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult`1.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},`0,BinanceAPI.Objects.Error)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="responseHeaders"></param>
            <param name="data"></param>
            <param name="error"></param>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult`1.#ctor(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},System.String,`0,BinanceAPI.Objects.Error)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="originalData"></param>
            <param name="responseHeaders"></param>
            <param name="data"></param>
            <param name="error"></param>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult`1.As``1(``0)">
            <summary>
            Copy the WebCallResult to a new data type
            </summary>
            <typeparam name="K">The new type</typeparam>
            <param name="data">The data of the new type</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Objects.WebCallResult`1.CreateErrorResult(System.Net.HttpStatusCode,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},BinanceAPI.Objects.Error)">
            <summary>
            Create an error result
            </summary>
            <param name="code"></param>
            <param name="responseHeaders"></param>
            <param name="error"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.Constants">
            <summary>
            Constants
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.Constants.JsonContentHeader">
            <summary>
            Json content type header
            </summary>
        </member>
        <member name="F:BinanceAPI.Objects.Constants.FormContentHeader">
            <summary>
            Form content type header
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.ArgumentError">
            <summary>
            An invalid parameter has been provided
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.ArgumentError.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BinanceAPI.Objects.CancellationRequestedError">
            <summary>
            Cancellation requested
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.CancellationRequestedError.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.CantConnectError">
            <summary>
            Cant reach server error
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.CantConnectError.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.DeserializeError">
            <summary>
            Error while deserializing data
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.DeserializeError.#ctor(System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="message">The error message</param>
            <param name="data">The data which caused the error</param>
        </member>
        <member name="T:BinanceAPI.Objects.Error">
            <summary>
            Base class for errors
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Error.Code">
            <summary>
            The error code from the server
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Error.Message">
            <summary>
            The message for the error that occurred
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Error.Data">
            <summary>
            The data which caused the error
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.Error.#ctor(System.Nullable{System.Int32},System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="M:BinanceAPI.Objects.Error.ToString">
            <summary>
            String representation
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.InvalidOperationError">
            <summary>
            Invalid operation requested
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.InvalidOperationError.#ctor(System.String)">
            <summary>
            ctor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:BinanceAPI.Objects.NoApiCredentialsError">
            <summary>
            No api credentials provided while trying to access a private endpoint
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.NoApiCredentialsError.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.ServerError">
            <summary>
            Error returned by the server
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.ServerError.#ctor(System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="M:BinanceAPI.Objects.ServerError.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="T:BinanceAPI.Objects.UnknownError">
            <summary>
            Unknown error
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.UnknownError.#ctor(System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="message">Error message</param>
            <param name="data">Error data</param>
        </member>
        <member name="T:BinanceAPI.Objects.WebError">
            <summary>
            Web error returned by the server
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.WebError.#ctor(System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="M:BinanceAPI.Objects.WebError.#ctor(System.Int32,System.String,System.Object)">
            <summary>
            ctor
            </summary>
            <param name="code"></param>
            <param name="message"></param>
            <param name="data"></param>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol">
            <summary>
            Isolated margin symbol info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.Base">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.Quote">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.IsMarginTrade">
            <summary>
            Margin trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.IsBuyAllowed">
            <summary>
            Is buy allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginSymbol.IsSellAllowed">
            <summary>
            Is sell allowed
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer">
            <summary>
            Isolated margin transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.Amount">
            <summary>
            Amount of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.Asset">
            <summary>
            Transfer asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.Status">
            <summary>
            Status of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.Timestamp">
            <summary>
            Timestamp of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.From">
            <summary>
            From
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginTransfer.To">
            <summary>
            To
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.CreateIsolatedMarginAccountResult">
            <summary>
            Result of creating isolated margin account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.CreateIsolatedMarginAccountResult.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.CreateIsolatedMarginAccountResult.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccount">
            <summary>
            Isolated margin account info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccount.Assets">
            <summary>
            Account assets
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccount.TotalAssetOfBtc">
            <summary>
            Total btc asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccount.TotalLiabilityOfBtc">
            <summary>
            Total liability
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccount.TotalNetAssetOfBtc">
            <summary>
            Total net asset
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol">
            <summary>
            Isolated margin account symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.IsolatedCreated">
            <summary>
            Isolated created
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.MarginLevel">
            <summary>
            The margin level
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.MarginLevelStatus">
            <summary>
            Margin level status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.MarginRatio">
            <summary>
            Margin ratio
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.LiquidatePrice">
            <summary>
            Liquidate price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.LiquidateRate">
            <summary>
            Liquidate rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.TradeEnabled">
            <summary>
            If trading is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountSymbol.Enabled">
            <summary>
            Account is enabled
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset">
            <summary>
            Isolated margin account asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.BorrowEnabled">
            <summary>
            If borrow is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Borrowed">
            <summary>
            Borrowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Available">
            <summary>
            Free
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.NetAsset">
            <summary>
            Net asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.NetAssetOfBtc">
            <summary>
            Net asset in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.RepayEnabled">
            <summary>
            Is repay enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.BinanceIsolatedMarginAccountAsset.Total">
            <summary>
            Total asset
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.IsolatedMarginData.IsolatedMarginAccountLimit">
            <summary>
            Enabled account limit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.IsolatedMarginAccountLimit.EnabledAccount">
            <summary>
            Current enabled accounts
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.IsolatedMarginData.IsolatedMarginAccountLimit.MaxAccount">
            <summary>
            Max accounts
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition">
            <summary>
            Customized fixed project position
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.CanTransfer">
            <summary>
            Can transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.CreateTimestamp">
            <summary>
            Create timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.EndTime">
            <summary>
            End time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Lot">
            <summary>
            Lot
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.PositionId">
            <summary>
            Position id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.ProjectName">
            <summary>
            Project name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.PurchaseTime">
            <summary>
            Time of purchase
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.RedeemDate">
            <summary>
            Redeem date
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.StartTime">
            <summary>
            Start time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceCustomizedFixedProjectPosition.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition">
            <summary>
            Flexible product position
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.AnnualInterestRate">
            <summary>
            Annual interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.AverageAnnualInterestRate">
            <summary>
            Average annual interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.CanRedeem">
            <summary>
            Can redeem
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.DailyInterestRate">
            <summary>
            Daily interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.FreeAmount">
            <summary>
            Amount free
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.FreezeAmount">
            <summary>
            Amount frozen
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.LockedAmount">
            <summary>
            Amount locked
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.ProductId">
            <summary>
            The product id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.ProductName">
            <summary>
            The product name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.RedeemingAmount">
            <summary>
            Redeeming amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.TodayPurchasedAmount">
            <summary>
            Amount purchased today
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.TotalAmount">
            <summary>
            Total amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceFlexibleProductPosition.TotalInterest">
            <summary>
            Total interest
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory">
            <summary>
            Interest record
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory.Time">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory.LendingType">
            <summary>
            Lending type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingInterestHistory.ProductName">
            <summary>
            Name of the product
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount">
            <summary>
            Lending account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalAmountInBTC">
            <summary>
            Total amount in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalAmountInUSDT">
            <summary>
            Total amount in usdt
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalFixedAmountInBTC">
            <summary>
            Total fixed amount in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalFixedAmountInUSDT">
            <summary>
            Total fixed amount in usdt
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalFlexibleInBTC">
            <summary>
            Total flexible in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.TotalFlexibleInUSDT">
            <summary>
            Total flexible in usdt
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingAccount.PositionAmounts">
            <summary>
            Position amounts
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPositionAmount">
            <summary>
            Lending position amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPositionAmount.Amount">
            <summary>
            Amount of the asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPositionAmount.AmountInBTC">
            <summary>
            Amount in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPositionAmount.AmountInUSDT">
            <summary>
            Amount in usdt
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPositionAmount.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPurchaseResult">
            <summary>
            Purchase result
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceLendingPurchaseResult.PurchaseId">
            <summary>
            The id of the purchase
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceProject">
            <summary>
            Binance project info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.DisplayPriority">
            <summary>
            Display priority
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.Duration">
            <summary>
            Duration
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.InterestPerLot">
            <summary>
            Interest per lot
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.LotSize">
            <summary>
            Lot size
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.LotsLowLimit">
            <summary>
            Lots low limit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.LotsPurchased">
            <summary>
            Lots purchased
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.LotsUpLimit">
            <summary>
            Lots upper limit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.MaxLotsPerUser">
            <summary>
            Max number of lots per user
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.NeedsKYC">
            <summary>
            Needs know your customer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.ProjectId">
            <summary>
            Project id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.ProjectName">
            <summary>
            Project name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceProject.WithAreaLimitation">
            <summary>
            Has area limitation
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseQuotaLeft">
            <summary>
            Purchase quota left
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseQuotaLeft.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseQuotaLeft.LeftQuota">
            <summary>
            The quota left
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord">
            <summary>
            Purchase record
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.Amount">
            <summary>
            Amount purchased
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.LendingType">
            <summary>
            Lending type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.ProductName">
            <summary>
            Name of the product
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.PurchaseId">
            <summary>
            Purchase id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinancePurchaseRecord.Status">
            <summary>
            Purchase status
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionQuotaLeft">
            <summary>
            Redemption quota left
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionQuotaLeft.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionQuotaLeft.DailyQuota">
            <summary>
            Daily quota
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionQuotaLeft.LeftQuota">
            <summary>
            Left quota
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionQuotaLeft.MinimalRedemptionAmount">
            <summary>
            Minimal redemption amount
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord">
            <summary>
            Redemption record
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.Amount">
            <summary>
            Amount purchased
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.CreateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.Type">
            <summary>
            Redeem type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.ProductName">
            <summary>
            Name of the product
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceRedemptionRecord.Status">
            <summary>
            Purchase status
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct">
            <summary>
            Savings product
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.AverageAnnualInterestRate">
            <summary>
            Average annual interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.TierAnnualInterestRate">
            <summary>
            Tier Average annual interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.CanPurchase">
            <summary>
            Can purchase
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.CanRedeem">
            <summary>
            Can redeem
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.DailyInterestPerThousand">
            <summary>
            Daily interest per thousand
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.Featured">
            <summary>
            Is featured
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.MinimalPurchaseAmount">
            <summary>
            Minimal amount to purchase
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.ProductId">
            <summary>
            Product id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.PurchasedAmount">
            <summary>
            Purchased amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.Status">
            <summary>
            Status of the product
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.UpperLimit">
            <summary>
            Upper limit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.LendingData.BinanceSavingsProduct.UpperLimitPerUser">
            <summary>
            Upper limit per user
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation">
            <summary>
            Forced liquidation info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.AveragePrice">
            <summary>
            Average price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.ExecutedQuantity">
            <summary>
            The executed quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.Quantity">
            <summary>
            Total quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceForcedLiquidation.IsIsolated">
            <summary>
            Is isolated margin
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory">
            <summary>
            Interest history entry info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.InterestAmount">
            <summary>
            The amount of interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.InterestAccuredTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.Principal">
            <summary>
            Principal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestHistory.Type">
            <summary>
            Type of interest
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceInterestIsolatedMarginData">
            <summary>
            Isolated Interest rate history
            https://binance-docs.github.io/apidocs/spot/en/#query-isolated-margin-fee-data-user_data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestIsolatedMarginData.Coin">
            <summary>
            The coin
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestIsolatedMarginData.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestIsolatedMarginData.Leverage">
            <summary>
            Leverage Multiplier for this Symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestIsolatedMarginData.Data">
            <summary>
            Asset data for this Symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceIsolatedInterestData">
            <summary>
            Isolated Margin Interest Data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceIsolatedInterestData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceIsolatedInterestData.DailyInterest">
            <summary>
            Daily Interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceIsolatedInterestData.BorrowLimit">
            <summary>
            Borrow Limit
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData">
            <summary>
            Interest rate history
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.Coin">
            <summary>
            The coin
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.TransferIn">
            <summary>
            If coin can be transferred into cross
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.Borrowable">
            <summary>
            If coin can be borrowed in cross
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.DailyInterest">
            <summary>
            The daily interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.YearlyInterest">
            <summary>
            The yearly interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.BorrowLimit">
            <summary>
            The yearly interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestMarginData.MarginablePairs">
            <summary>
            Cross marginable pairs for this coin
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceInterestRateHistory">
            <summary>
            Interest rate history
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestRateHistory.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestRateHistory.DailyInterest">
            <summary>
            The daily interest
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestRateHistory.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceInterestRateHistory.VipLevel">
            <summary>
            Vip level
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount">
            <summary>
            Information about margin account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.BorrowEnabled">
            <summary>
            Boolean indicating if this account can borrow
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.TradeEnabled">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.TransferEnabled">
            <summary>
            Boolean indicating if this account can transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.MarginLevel">
            <summary>
            Aggregate level of margin
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.TotalAssetOfBtc">
            <summary>
            Aggregate total balance as BTC
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.TotalLiabilityOfBtc">
            <summary>
            Aggregate total liability balance of BTC
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.TotalNetAssetOfBtc">
            <summary>
            Aggregate total available net balance of BTC
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccount.Balances">
            <summary>
            Balance list
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Borrowed">
            <summary>
            The amount that was borrowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Available">
            <summary>
            The amount that isn't locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Interest">
            <summary>
            Commission to need pay by borrowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Locked">
            <summary>
            The amount that is currently locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.NetAsset">
            <summary>
            The amount that is netAsset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshot">
            <summary>
            Margin account snapshot
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshot.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshot.Type">
            <summary>
            Account type the data is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshot.Data">
            <summary>
            Snapshot data
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData">
            <summary>
            Margin snapshot data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData.MarginLevel">
            <summary>
            The margin level
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData.TotalAssetOfBtc">
            <summary>
            Total BTC asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData.TotalLiabilityOfBtc">
            <summary>
            Total BTC liability
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData.TotalNetAssetOfBtc">
            <summary>
            Total net BTC asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAccountSnapshotData.UserAssets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAmount">
            <summary>
            The result amount of getting maxBorrowable or maxTransferable
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAmount.Amount">
            <summary>
            The amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAmount.BorrowLimit">
            <summary>
            The borrow limit
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset">
            <summary>
            Margin asset info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.FullName">
            <summary>
            Full name of the asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.Name">
            <summary>
            Short name of the asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.IsBorrowable">
            <summary>
            Is borrowable
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.IsMortgageable">
            <summary>
            Is mortgageable
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.MinimalBorrowAmount">
            <summary>
            Minimal amount which can be borrowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginAsset.MinimalRepayAmount">
            <summary>
            Minimal amount which can be repaid
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginOrderOcoList">
            <summary>
            Oco info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginOrderOcoList.MarginBuyBorrowAmount">
            <summary>
            Margin buy borrow amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginOrderOcoList.MarginBuyBorrowAsset">
            <summary>
            Margin buy borrow asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginOrderOcoList.IsIsolated">
            <summary>
            Is isolated margin
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair">
            <summary>
            Margin pair info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.BaseAsset">
            <summary>
            Base asset of the pair
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.QuoteAsset">
            <summary>
            Quote asset of the pair
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.IsBuyAllowed">
            <summary>
            Is buying allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.IsSellAllowed">
            <summary>
            Is selling allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.IsMarginTrade">
            <summary>
            Is margin trading
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPair.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPriceIndex">
            <summary>
            Price index for a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPriceIndex.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPriceIndex.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceMarginPriceIndex.CalculationTime">
            <summary>
            Time of calculation
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceTransaction">
            <summary>
            The result of transferring
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransaction.TransactionId">
            <summary>
            The Transaction id as assigned by Binance
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceLoan">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceLoan.Asset">
            <summary>
            The asset of the loan
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceLoan.TransactionId">
            <summary>
            The transaction id of the loan
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceLoan.Principal">
            <summary>
            Principal repaid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceLoan.Time">
            <summary>
            Time of repay completed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceLoan.Status">
            <summary>
            The status of the loan
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceRepay">
            <summary>
            Repay info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Asset">
            <summary>
            The asset of the repay
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.TransactionId">
            <summary>
            The transaction id of the repay
            </summary>`
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Amount">
            <summary>
            Total amount repaid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Interest">
            <summary>
            Interest repaid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Principal">
            <summary>
            Principal repaid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Time">
            <summary>
            Time of repay completed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceRepay.Status">
            <summary>
            The status of the repay
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory">
            <summary>
            Transfer history entry
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.Amount">
            <summary>
            Amount of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.Asset">
            <summary>
            Asset of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.Status">
            <summary>
            Status of the transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.Timestamp">
            <summary>
            Timestamp of the transaction
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarginData.BinanceTransferHistory.Direction">
            <summary>
            Direction of the transfer
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade">
            <summary>
            Compressed aggregated trade information. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.AggregateTradeId">
            <summary>
            The id of this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.Price">
            <summary>
            The price of trades in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.Quantity">
            <summary>
            The total quantity of trades in the aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.TradeTime">
            <summary>
            The timestamp of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAggregatedTrade.WasBestPriceMatch">
            <summary>
            Whether the trade was matched at the best price
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceAveragePrice">
            <summary>
            Current average price details for a symbol.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAveragePrice.Minutes">
            <summary>
            Duration in minutes
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceAveragePrice.Price">
            <summary>
            The average price
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice">
            <summary>
            Information about the best price/quantity available for a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.Symbol">
            <summary>
            The symbol the information is about
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.BestBidPrice">
            <summary>
            The highest bid price for the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.BestBidQuantity">
            <summary>
            The quantity of the highest bid price currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.BestAskPrice">
            <summary>
            The lowest ask price for the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.BestAskQuantity">
            <summary>
            The quantity of the lowest ask price currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceBookPrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceCheckTime">
            <summary>
            Server Time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceCheckTime.ServerTime">
            <summary>
            Server Time
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook">
            <summary>
            Stream order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.FirstUpdateId">
            <summary>
            The id of this update, can be synced with BinanceClient.Spot.GetOrderBook to update the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.LastUpdateIdStream">
            <summary>
            Setter for last update id, need for Json.Net
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.EventTime">
            <summary>
            Event time of the update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.BidsStream">
            <summary>
            Setter for bids (needed forJson.Net)
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook.AsksStream">
            <summary>
            Setter for asks (needed forJson.Net)
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo">
            <summary>
            Exchange info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo.TimeZone">
            <summary>
            The timezone the server uses
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo.ServerTime">
            <summary>
            The current server time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo.RateLimits">
            <summary>
            Rate Limits
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo.Symbols">
            <summary>
            All symbols supported
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceExchangeInfo.ExchangeFilters">
            <summary>
            Filters
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline">
            <summary>
            Kline for mark or index price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.OpenTime">
            <summary>
            The time this candlestick opened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.Open">
            <summary>
            The price at which this candlestick opened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.High">
            <summary>
            The highest price in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.Low">
            <summary>
            The lowest price in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.Close">
            <summary>
            The price at which this candlestick closed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMarkIndexKline.BasicDataCount">
            <summary>
            Number of basic data
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook">
            <summary>
            The order book for a asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook.Symbol">
            <summary>
            The symbol of the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook.LastUpdateId">
            <summary>
            The ID of the last update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinancePrice">
            <summary>
            The price of a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinancePrice.Symbol">
            <summary>
            The symbol the price is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinancePrice.Price">
            <summary>
            The price of the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinancePrice.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceRateLimit">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRateLimit.Type">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRateLimit.Interval">
            <summary>
            Rate Limit Interval
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRateLimit.IntervalNum">
            <summary>
            Rate Limit Interval Number
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRateLimit.Limit">
            <summary>
            Rate Limit
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade">
            <summary>
            Recent trade info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.OrderId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.TradeTime">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.BuyerIsMaker">
            <summary>
            Whether the buyer is maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTrade.IsBestMatch">
            <summary>
            Whether the trade was made at the best match
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeQuote">
            <summary>
            Recent trade with quote quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeQuote.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeQuote.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeBase">
            <summary>
            Recent trade with base quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeBase.QuoteQuantity">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceRecentTradeBase.BaseQuantity">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline">
            <summary>
            Candlestick information for symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline.BaseVolume">
            <summary>
            The volume traded during this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline.QuoteVolume">
            <summary>
            The volume traded during this candlestick in the asset form
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline.TakerBuyBaseVolume">
            <summary>
            Taker buy base asset volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline.TakerBuyQuoteVolume">
            <summary>
            Taker buy quote asset volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline.Ignore">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol">
            <summary>
            Symbol info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.Name">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.BaseAssetPrecision">
            <summary>
            The precision of the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.QuoteAssetPrecision">
            <summary>
            The precision of the quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.OrderTypes">
            <summary>
            Allowed order types
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.IceBergAllowed">
            <summary>
            Ice berg orders allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.IsSpotTradingAllowed">
            <summary>
            Spot trading orders allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.IsMarginTradingAllowed">
            <summary>
            Margin trading orders allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.OCOAllowed">
            <summary>
            If OCO(One Cancels Other) orders are allowed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.QuoteOrderQuantityMarketAllowed">
            <summary>
            Whether or not it is allowed to specify the quantity of a market order in the quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.BaseCommissionPrecision">
            <summary>
            The precision of the base asset commission
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.QuoteCommissionPrecision">
            <summary>
            The precision of the quote asset commission
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.AllowTrailingStop">
            <summary>
            True if the symbol allows trailing stops
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.CancelReplaceAllowed">
            <summary>
            True if the symbol allows Cancel Replace
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.Permissions">
            <summary>
            Permissions types
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.Filters">
            <summary>
            Filters for order on this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.IceBergPartsFilter">
            <summary>
            Filter for max amount of iceberg parts for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.LotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MarketLotSizeFilter">
            <summary>
            Filter for max accuracy of the quantity for this symbol, specifically for market orders
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MaxOrdersFilter">
            <summary>
            Filter for max number of orders for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MaxAlgorithmicOrdersFilter">
            <summary>
            Filter for max algorithmic orders for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MinNotionalFilter">
            <summary>
            Filter for the minimal size of an order for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.NotionalFilter">
            <summary>
            Filter for the notional range allowed for an order on a symbol.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.PriceFilter">
            <summary>
            Filter for the max accuracy of the price for this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.PricePercentFilter">
            <summary>
            Filter for the maximum deviation of the price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MaxPositionFilter">
            <summary>
            Filter for the maximum position on a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.TrailingDeltaFilter">
            <summary>
            Filter for the trailing delta values
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbol.MaxIcebergFilter">
            <summary>
            Filter for the max number of iceberg orders allowed on a symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolFilter">
            <summary>
            A filter for order placed on a symbol.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolFilter.FilterType">
            <summary>
            The type of this filter
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPriceFilter">
            <summary>
            Price filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPriceFilter.MinPrice">
            <summary>
            The minimal price the order can be for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPriceFilter.MaxPrice">
            <summary>
            The max price the order can be for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPriceFilter.TickSize">
            <summary>
            The tick size of the price. The price can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPercentPriceFilter">
            <summary>
            Price percentage filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPercentPriceFilter.MultiplierUp">
            <summary>
            The max factor the price can deviate up
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPercentPriceFilter.MultiplierDown">
            <summary>
            The max factor the price can deviate down
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolPercentPriceFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over. 0 means the last price is used
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolLotSizeFilter">
            <summary>
            Lot size filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMarketLotSizeFilter">
            <summary>
            Market lot size filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMarketLotSizeFilter.MinQuantity">
            <summary>
            The minimal quantity of an order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMarketLotSizeFilter.MaxQuantity">
            <summary>
            The maximum quantity of an order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMarketLotSizeFilter.StepSize">
            <summary>
            The tick size of the quantity. The quantity can not have more precision as this and can only be incremented in steps of this.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMinNotionalFilter">
            <summary>
            Min notional filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMinNotionalFilter.MinNotional">
            <summary>
            The minimal total size of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMinNotionalFilter.ApplyToMarketOrders">
            <summary>
            Whether or not this filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMinNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter">
            <summary>
            Notional filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter.MinNotional">
            <summary>
            The minimal total size of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter.ApplyMinToMarketOrders">
            <summary>
            Whether or not this filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter.MaxNotional">
            <summary>
            The maximum total size of an order. This is calculated by Price * Quantity.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter.ApplyMaxToMarketOrders">
            <summary>
            Whether or not this filter is applied to market orders. If so the average trade price is used.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolNotionalFilter.AveragePriceMinutes">
            <summary>
            The amount of minutes the average price of trades is calculated over for market orders. 0 means the last price is used
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxOrdersFilter">
             <summary>
            Max orders filter
             </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxOrdersFilter.MaxNumberOrders">
            <summary>
            The max number of orders for this symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxAlgorithmicOrdersFilter">
            <summary>
            Max algo orders filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxAlgorithmicOrdersFilter.MaxNumberAlgorithmicOrders">
            <summary>
            The max number of Algorithmic orders for this symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolIcebergPartsFilter">
            <summary>
            Max iceberg parts filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolIcebergPartsFilter.Limit">
            <summary>
            The max parts of an iceberg order for this symbol.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxPositionFilter">
            <summary>
            Max position filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolMaxPositionFilter.MaxPosition">
            <summary>
            The MaxPosition filter defines the allowed maximum position an account can have on the base asset of a symbol.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolTrailingDeltaFilter">
            <summary>
            Trailing delta filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolTrailingDeltaFilter.MinTrailingAboveDelta">
            <summary>
            The MinTrailingAboveDelta filter defines the minimum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolTrailingDeltaFilter.MaxTrailingAboveDelta">
            <summary>
            The MaxTrailingAboveDelta filter defines the maximum amount in Basis Point or BIPS above the price to activate the order.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolTrailingDeltaFilter.MinTrailingBelowDelta">
            <summary>
            The MinTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceSymbolTrailingDeltaFilter.MaxTrailingBelowDelta">
            <summary>
            The MaxTrailingBelowDelta filter defines the minimum amount in Basis Point or BIPS below the price to activate the order.
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketData.BinanceMaxNumberOfIcebergOrdersFilter">
            <summary>
            Max Iceberg Orders Filter
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketData.BinanceMaxNumberOfIcebergOrdersFilter.MaxNumIcebergOrders">
            <summary>
            Maximum number of iceberg orders for this symbol
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade">
            <summary>
            Aggregated information about trades for a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.Symbol">
            <summary>
            The symbol the trade was for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.AggregateTradeId">
            <summary>
            The id of this aggregated trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.Price">
            <summary>
            The price of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.Quantity">
            <summary>
            The combined quantity of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.FirstTradeId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.LastTradeId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.TradeTime">
            <summary>
            The time of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade.Ignore">
            <summary>
            Unused
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice">
            <summary>
            Book tick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.UpdateId">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.BestBidPrice">
            <summary>
            Price of the best bid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.BestAskPrice">
            <summary>
            Price of the best ask
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData">
            <summary>
            Wrapper for kline information for a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData.Symbol">
            <summary>
            The symbol the data is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline">
            <summary>
            The kline data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.OpenTime">
            <summary>
            The open time of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.BaseVolume">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.CloseTime">
            <summary>
            The close time of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.QuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Symbol">
            <summary>
            The symbol this candlestick is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Interval">
            <summary>
            The interval of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.FirstTrade">
            <summary>
            The first trade id in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.LastTrade">
            <summary>
            The last trade id in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Open">
            <summary>
            The open price of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Close">
            <summary>
            The close price of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.High">
            <summary>
            The highest price of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Low">
            <summary>
            The lowest price of this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.TradeCount">
            <summary>
            The amount of trades in this candlestick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.TakerBuyBaseVolume">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.TakerBuyQuoteVolume">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.Final">
            <summary>
            Boolean indicating whether this candlestick is closed
            </summary>
        </member>
        <member name="M:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKline.ToKline">
            <summary>
            Casts this object to a <see cref="T:BinanceAPI.Objects.Spot.MarketData.BinanceSpotKline"/> object
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick">
            <summary>
            MiniTick info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.BaseVolume">
            <summary>
            Total traded volume
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceMiniTick.QuoteVolume">
            <summary>
            Total traded quote volume
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick">
            <summary>
            Stream mini tick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick.BaseVolume">
            <inheritdoc/>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick.QuoteVolume">
            <inheritdoc/>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase">
            <summary>
            Tick info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.Symbol">
            <summary>
            The symbol this data is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.PriceChange">
            <summary>
            The price change of this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.PriceChangePercent">
            <summary>
            The price change percentage of this symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.WeightedAveragePrice">
            <summary>
            The weighted average
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.PrevDayClosePrice">
            <summary>
            The close price of the previous day
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.LastPrice">
            <summary>
            The current day close price. This is the latest price for this symbol.
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.LastQuantity">
            <summary>
            The most recent trade quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.BidPrice">
            <summary>
            The best bid price in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.BidQuantity">
            <summary>
            The size of the best bid price in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.AskPrice">
            <summary>
            The best ask price in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.AskQuantity">
            <summary>
            The size of the best ask price in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.OpenPrice">
            <summary>
            Todays open price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.HighPrice">
            <summary>
            Todays high price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.LowPrice">
            <summary>
            Todays low price
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.BaseVolume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.FirstTradeId">
            <summary>
            The first trade id of today
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.LastTradeId">
            <summary>
            The last trade id of today
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.TotalTrades">
            <summary>
            The total trades of id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.OpenTime">
            <summary>
            The open time of these stats
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTickBase.CloseTime">
            <summary>
            The close time of these stats
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick">
            <summary>
            Stream tick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick.BaseVolume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamCoinTick">
            <summary>
            Stream tick
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamCoinTick.BaseVolume">
            <summary>
            Total traded volume in the base asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamCoinTick.QuoteVolume">
            <summary>
            Total traded volume in the quote asset
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade">
            <summary>
            Aggregated information about trades for a symbol
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.Symbol">
            <summary>
            The symbol the trade was for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.OrderId">
            <summary>
            The id of this aggregated trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.Price">
            <summary>
            The price of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.Quantity">
            <summary>
            The combined quantity of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.BuyerOrderId">
            <summary>
            The first trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.SellerOrderId">
            <summary>
            The last trade id in this aggregation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.TradeTime">
            <summary>
            The time of the trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.BuyerIsMaker">
            <summary>
            Whether the buyer was the maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade.IsBestMatch">
            <summary>
            Unused
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo">
            <summary>
            Information about an account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.MakerCommission">
            <summary>
            Commission percentage to pay when making trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.TakerCommission">
            <summary>
            Commission percentage to pay when taking trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.BuyerCommission">
            <summary>
            Commission percentage to buy when buying
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.SellerCommission">
            <summary>
            Commission percentage to buy when selling
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.CanTrade">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.CanWithdraw">
            <summary>
            Boolean indicating if this account can withdraw
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.CanDeposit">
            <summary>
            Boolean indicating if this account can deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.AccountType">
            <summary>
            The type of account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.Permissions">
            <summary>
            Permissions types
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceAccountInfo.Balances">
            <summary>
            List of assets with their current balances
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBalance.Available">
            <summary>
            The amount that isn't locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBalance.Locked">
            <summary>
            The amount that is currently locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceBnbBurnStatus">
            <summary>
            Bnb burn status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBnbBurnStatus.SpotBnbBurn">
            <summary>
            If spot trading BNB burn is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceBnbBurnStatus.InterestBnbBurn">
            <summary>
            If margin interest BNB burn is enabled
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceCanceledOrder">
            <summary>
            Information about a canceled order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceCanceledOrder.OrderId">
            <summary>
            ID of the Order that is being cancelled
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceCancelledId">
            <summary>
            Ids of a canceled order, either OCO or normal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceCancelledId.Id">
            <summary>
            Id of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceCancelledId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceCancelledId.OcoOrder">
            <summary>
            Whether or not it is an OCO order
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinceOrder">
            <summary>
            Information regarding a specific order
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList">
            <summary>
            The result of placing a new OCO order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.OrderListId">
            <summary>
            The id of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.ContingencyType">
            <summary>
            The contingency type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.ListStatusType">
            <summary>
            The order list status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.ListOrderStatus">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.ListClientOrderId">
            <summary>
            The client id of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.TransactionTime">
            <summary>
            The transaction time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.Symbol">
            <summary>
            The symbol of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.Orders">
            <summary>
            The order in this list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderOcoList.OrderReports">
            <summary>
            The order details
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceOrderId">
            <summary>
            Order reference
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderId.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderId.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderId.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOcoOrder">
            <summary>
            The result of placing a new order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOcoOrder.CreateTime">
            <summary>
            The time the order was placed
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade.TradeId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade.Price">
            <summary>
            Price of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade.Quantity">
            <summary>
            Quantity of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade.Commission">
            <summary>
            Commission paid over this trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceOrderTrade.CommissionAsset">
            <summary>
            The asset the commission is paid in
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOrder">
            <summary>
            The result of placing a new order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOrder.CreateTime">
            <summary>
            The time the order was placed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOrder.Fills">
            <summary>
            Fills for the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOrder.MarginBuyBorrowAmount">
            <summary>
            Only present if a margin trade happened
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinancePlacedOrder.MarginBuyBorrowAsset">
            <summary>
            Only present if a margin trade happened
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshot">
            <summary>
            Snapshot data of a spot account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshot.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshot.Type">
            <summary>
            Account type the data is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshot.Data">
            <summary>
            Snapshot data
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshotData">
            <summary>
            Data of the snapshot
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshotData.TotalAssetOfBtc">
            <summary>
            The total value of assets in btc
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceSpotAccountSnapshotData.Balances">
            <summary>
            List of balances
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.SpotData.BinanceTrade">
            <summary>
            Information about a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.Symbol">
            <summary>
            The symbol the trade is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.OrderId">
            <summary>
            The order id the trade belongs to
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.OrderListId">
            <summary>
            Id of the order list this order belongs to
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.QuoteQuantity">
            <summary>
            The quote quantity of the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.Commission">
            <summary>
            The commission paid for the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.CommissionAsset">
            <summary>
            The asset the commission is paid in
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.TradeTime">
            <summary>
            The time the trade was made
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.IsBuyer">
            <summary>
            Whether account was the buyer in the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.IsMaker">
            <summary>
            Whether account was the maker in the trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.SpotData.BinanceTrade.IsBestMatch">
            <summary>
            Whether trade was made with the best match
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo">
            <summary>
            Information about an account
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.Time">
            <summary>
            Time of last account update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.MakerCommission">
            <summary>
            Commission percentage to pay when making trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.TakerCommission">
            <summary>
            Commission percentage to pay when taking trades
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.BuyerCommission">
            <summary>
            Commission percentage to buy when buying
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.SellerCommission">
            <summary>
            Commission percentage to buy when selling
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.CanTrade">
            <summary>
            Boolean indicating if this account can trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.CanWithdraw">
            <summary>
            Boolean indicating if this account can withdraw
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.CanDeposit">
            <summary>
            Boolean indicating if this account can deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.Permissions">
            <summary>
            Permissions types
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamAccountInfo.Balances">
            <summary>
            List of assets with their current balances
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalance">
            <summary>
            Information about an asset balance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalance.Asset">
            <summary>
            The asset this balance is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalance.Free">
            <summary>
            The amount that isn't locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalance.Locked">
            <summary>
            The amount that is currently locked in a trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalance.Total">
            <summary>
            The total balance of this asset (Free + Locked)
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalanceUpdate">
            <summary>
            Update when asset is withdrawn/deposited
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalanceUpdate.Asset">
            <summary>
            The asset which changed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalanceUpdate.BalanceDelta">
            <summary>
            The balance delta
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalanceUpdate.ClearTime">
            <summary>
            The time the deposit/withdrawal was cleared
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList">
            <summary>
            Order list info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.OrderListId">
            <summary>
            The id of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.ContingencyType">
            <summary>
            The contingency type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.ListStatusType">
            <summary>
            The order list status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.ListOrderStatus">
            <summary>
            The order status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.ListClientOrderId">
            <summary>
            The client id of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.TransactionTime">
            <summary>
            The transaction time
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.Symbol">
            <summary>
            The symbol of the order list
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList.Orders">
            <summary>
            The order in this list
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderId">
            <summary>
            Order reference
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderId.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderId.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderId.ClientOrderId">
            <summary>
            The client order id
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate">
            <summary>
            Update data about an order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Symbol">
            <summary>
            The symbol the order is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.ClientOrderId">
            <summary>
            The new client order id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.TimeInForce">
            <summary>
            The timespan the order is active
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.StopPrice">
            <summary>
            The stop price of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.TrailingDelta">
            <summary>
            The trailing delta of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.IcebergQuantity">
            <summary>
            The iceberg quantity of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.OrderListID">
            <summary>
            This id of the corresponding order list. (-1 if not part of an order list)
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.OriginalClientOrderId">
            <summary>
            The original client order id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.ExecutionType">
            <summary>
            The execution type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Status">
            <summary>
            The status of the order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.RejectReason">
            <summary>
            The reason the order was rejected
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.OrderId">
            <summary>
            The id of the order as assigned by Binance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.LastQuantityFilled">
            <summary>
            The quantity of the last filled trade of this order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.QuantityFilled">
            <summary>
            <para>Cumulative filled quantity</para>
            The quantity of all trades that were filled for this order
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.LastPriceFilled">
            <summary>
            The price of the last filled trade
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.Commission">
            <summary>
            The commission payed
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.CommissionAsset">
            <summary>
            The asset the commission was taken from
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.UpdateTime">
            <summary>
            The time of the update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.TradeId">
            <summary>
            The trade id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.I">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.IsWorking">
            <summary>
            Is working
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.BuyerIsMaker">
            <summary>
            Whether the buyer is the maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.M">
            <summary>
            Ignore
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.CreateTime">
            <summary>
            Time the order was created
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.QuoteQuantityFilled">
            <summary>
            <para>Average price can be found by doing <see href="QuoteQuantityFilled"/> divided by <see href="QuantityFilled"/>.</para>
            Cumulative quote asset transacted quantity
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.LastQuoteQuantity">
            <summary>
            Last quote asset transacted quantity (i.e. LastPrice * LastQuantity)
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate.QuoteQuantity">
            <summary>
            Quote order quantity
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.UserStream.BinanceStreamPositionsUpdate">
            <summary>
            Positions update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamPositionsUpdate.Time">
            <summary>
            Time of last account update
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.UserStream.BinanceStreamPositionsUpdate.Balances">
            <summary>
            Balances
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceAccountStatus">
            <summary>
            Account status info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAccountStatus.Data">
            <summary>
            The result status
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDepositAddress.Address">
            <summary>
            The deposit address
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDepositAddress.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDepositAddress.Tag">
            <summary>
            Address tag
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDepositAddress.Coin">
            <summary>
            Coin the address is for
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit">
            <summary>
            Information about a deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.InsertTime">
            <summary>
            Time the deposit was added to Binance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Amount">
            <summary>
            The amount deposited
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Coin">
            <summary>
            The coin deposited
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Address">
            <summary>
            The address of the deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Tag">
            <summary>
            The tag of the address of the deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Network">
            <summary>
            The network
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.TransactionId">
            <summary>
            The transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Status">
            <summary>
            The status of the deposit
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.TransferType">
            <summary>
            The transfer type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.Confirmations">
            <summary>
            Confirmations
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDeposit.ConfirmationsForUnlock">
            <summary>
            Network confirmations for unlocking
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord">
            <summary>
            Dividend record
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord.Timestamp">
            <summary>
            Timestamp of the transaction
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDividendRecord.Info">
            <summary>
            Info
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogList">
            <summary>
            Dust log response details
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogList.Total">
            <summary>
            Total counts of exchange
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogList.UserAssetDribblets">
            <summary>
            Rows
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog">
            <summary>
            Dust log details
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog.TransferredTotal">
            <summary>
            Total transferred
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog.ServiceChargeTotal">
            <summary>
            Total service charge
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog.Logs">
            <summary>
            Detail logs
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLog.OperateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails">
            <summary>
            Dust log entry details
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.ServiceChargeAmount">
            <summary>
            Service charge
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.OperateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.TransferredAmount">
            <summary>
            Transferred amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustLogDetails.FromAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResult">
            <summary>
            Result of dust transfer
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResult.TotalServiceCharge">
            <summary>
            Total service charge
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResult.TotalTransferred">
            <summary>
            Total transferred
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResult.TransferResult">
            <summary>
            Transfer entries
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry">
            <summary>
            Dust transfer entry
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.Amount">
            <summary>
            Amount of dust
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.FromAsset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.Timestamp">
            <summary>
            Timestamp of conversion
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.ServiceChargeAmount">
            <summary>
            Service charge
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceDustTransferResultEntry.TransferredAmount">
            <summary>
            BNB result amount
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset">
            <summary>
            Funding wallet asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.Free">
            <summary>
            Amount available
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.Locked">
            <summary>
            Amount locked
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.Freeze">
            <summary>
            Amount frozen
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.Withdrawing">
            <summary>
            Amount withdrawing
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceFundingAsset.BtcValuation">
            <summary>
            Value in btc
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceSystemStatus">
            <summary>
            The status of Binance
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceSystemStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceSystemStatus.Message">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceTradeFee">
            <summary>
            Trade fee info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradeFee.Symbol">
            <summary>
            The symbol this fee is for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradeFee.MakerFee">
            <summary>
            The fee for trades where you're the maker
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradeFee.TakerFee">
            <summary>
            The fee for trades where you're the taker
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus">
            <summary>
            Trade status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus.IsLocked">
            <summary>
            Is locked
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus.PlannedRecoverTime">
            <summary>
            Planned time of recovery
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus.TriggerConditions">
            <summary>
            Conditions
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus.Indicators">
            <summary>
            Dictionary of indicator lists for symbols
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTradingStatus.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceIndicator">
            <summary>
            Indicator info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceIndicator.IndicatorType">
            <summary>
            Indicator name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceIndicator.Count">
            <summary>
            Count
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceIndicator.CurrentValue">
            <summary>
            Current value
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceIndicator.TriggerValue">
            <summary>
            Trigger value
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer">
            <summary>
            Transfer info
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.Asset">
            <summary>
            The asset which was transfered
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.Amount">
            <summary>
            Amount transfered
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.Type">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.TransactionId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceTransfer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin">
            <summary>
            Information about a coin for a user
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Coin">
            <summary>
            Coin code
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.DepositAllEnable">
            <summary>
            Deposit all is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Free">
            <summary>
            Amount free
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Freeze">
            <summary>
            Amount frozen
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Ipoable">
            <summary>
            Ipo-able
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Ipoing">
            <summary>
            Ipo-ing
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.IsLegalMoney">
            <summary>
            Is the coin legally money
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Locked">
            <summary>
            Amount locked
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Storage">
            <summary>
            Storage
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Trading">
            <summary>
            Is trading
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.WithdrawAllEnable">
            <summary>
            Withdraw all enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Name">
            <summary>
            Name of the coin
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.Withdrawing">
            <summary>
            Currently withdrawing
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceUserCoin.NetworkList">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork">
            <summary>
            Network for a coin
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.AddressRegex">
            <summary>
            Regex for an address on the network
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.Coin">
            <summary>
            Coin name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.DepositDescription">
            <summary>
            Deposit description
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.DepositEnabled">
            <summary>
            Deposit enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.IsDefault">
            <summary>
            Is default network
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.MemoRegex">
            <summary>
            Regex for a memo
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.MinConfirmations">
            <summary>
            Minimal confirmations for balance confirmation
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.ResetAddressStatus">
            <summary>
            Reset address status
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.SpecialTips">
            <summary>
            Tips
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.UnlockConfirm">
            <summary>
            Confirmation number for balance unlock
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawDescription">
            <summary>
            Withdraw description
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawEnabled">
            <summary>
            Withdraw is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawFee">
            <summary>
            Fee for withdrawing
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawMin">
            <summary>
            Minimal withdraw amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawIntegerMultiple">
            <summary>
            Min withdraw step
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.WithdrawMax">
            <summary>
            Max withdraw amount
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceNetwork.SameAddress">
            <summary>
            If the coin needs to provide memo to withdraw
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails">
            <summary>
            Asset details
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails.MinimalWithdrawAmount">
            <summary>
            Minimal amount you can withdraw
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails.DepositStatus">
            <summary>
            Whether deposits are enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails.WithdrawStatus">
            <summary>
            Whether withdrawing is enabled
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails.WithdrawFee">
            <summary>
            Fee for withdrawing
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceAssetDetails.DepositTip">
            <summary>
            Status string for deposit
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal">
            <summary>
            Information about a withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Id">
            <summary>
            The id of the withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.ApplyTime">
            <summary>
            The time the withdrawal was applied for
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Amount">
            <summary>
            The amount of the withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Address">
            <summary>
            The address the asset was withdrawn to
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.AddressTag">
            <summary>
            Tag for the address
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.TransactionId">
            <summary>
            The transaction id of the withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.TransactionFee">
            <summary>
            Transaction fee for the withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Asset">
            <summary>
            The asset that was withdrawn
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Network">
            <summary>
            Network that was used
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.ConfirmTimes">
            <summary>
            Confirm times for withdraw
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.Status">
            <summary>
            The status of the withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawal.TransferType">
            <summary>
            Transfer type: 1 for internal transfer, 0 for external transfer
            </summary>
        </member>
        <member name="T:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawalPlaced">
            <summary>
            Result of placing a withdrawal
            </summary>
        </member>
        <member name="P:BinanceAPI.Objects.Spot.WalletData.BinanceWithdrawalPlaced.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:BinanceAPI.ExchangeHelpers">
            <summary>
            General helpers functions
            </summary>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.ClampValue(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Clamp a value between a min and max
            </summary>
            <param name="min"></param>
            <param name="max"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.AdjustValueStep(System.Decimal,System.Decimal,System.Nullable{System.Decimal},BinanceAPI.Enums.RoundingType,System.Decimal)">
            <summary>
            Adjust a value to be between the min and max parameters and rounded to the closest step.
            </summary>
            <param name="min">The min value</param>
            <param name="max">The max value</param>
            <param name="step">The step size the value should be floored to. For example, value 2.548 with a step size of 0.01 will output 2.54</param>
            <param name="roundingType">How to round</param>
            <param name="value">The input value</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.AdjustValuePrecision(System.Decimal,System.Decimal,System.Nullable{System.Int32},BinanceAPI.Enums.RoundingType,System.Decimal)">
            <summary>
            Adjust a value to be between the min and max parameters and rounded to the closest precision.
            </summary>
            <param name="min">The min value</param>
            <param name="max">The max value</param>
            <param name="precision">The precision the value should be rounded to. For example, value 2.554215 with a precision of 5 will output 2.5542</param>
            <param name="roundingType">How to round</param>
            <param name="value">The input value</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.RoundToSignificantDigits(System.Decimal,System.Int32,BinanceAPI.Enums.RoundingType)">
            <summary>
            Round a value to have the provided total number of digits. For example, value 253.12332 with 5 digits would be 253.12
            </summary>
            <param name="value">The value to round</param>
            <param name="digits">The total amount of digits (NOT decimal places) to round to</param>
            <param name="roundingType">How to round</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.RoundDown(System.Decimal,System.Double)">
            <summary>
            Rounds a value down to
            </summary>
            <param name="i"></param>
            <param name="decimalPlaces"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExchangeHelpers.Normalize(System.Decimal)">
            <summary>
            Strips any trailing zero's of a decimal value, useful when converting the value to string.
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.ExtensionMethods">
            <summary>
            Helper methods
            </summary>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.AddParameter(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.String)">
            <summary>
            Add a parameter
            </summary>
            <param name="parameters"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.AddOptionalParameter(System.Collections.Generic.Dictionary{System.String,System.Object},System.String,System.Object)">
            <summary>
            Add an optional parameter. Not added if value is null
            </summary>
            <param name="parameters"></param>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.CreateParamString(System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,BinanceAPI.Enums.ArrayParametersSerialization)">
            <summary>
            Create a query string of the specified parameters
            </summary>
            <param name="parameters">The parameters to use</param>
            <param name="urlEncodeValues">Whether or not the values should be url encoded</param>
            <param name="serializationType">How to serialize array parameters</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.GetString(System.Security.SecureString)">
            <summary>
            Get the string the secure string is representing
            </summary>
            <param name="source">The source secure string</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ToSecureString(System.String)">
            <summary>
            Create a secure string from a string
            </summary>
            <param name="source"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ToJToken(System.String)">
            <summary>
            String to JToken
            </summary>
            <param name="stringData"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ValidateIntValues(System.Int32,System.String,System.Int32[])">
            <summary>
            Validates an int is one of the allowed values
            </summary>
            <param name="value">Value of the int</param>
            <param name="argumentName">Name of the parameter</param>
            <param name="allowedValues">Allowed values</param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ValidateIntBetween(System.Int32,System.String,System.Int32,System.Int32)">
            <summary>
            Validates an int is between two values
            </summary>
            <param name="value">The value of the int</param>
            <param name="argumentName">Name of the parameter</param>
            <param name="minValue">Min value</param>
            <param name="maxValue">Max value</param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ValidateNotNull(System.String,System.String)">
            <summary>
            Validates a string is not null or empty
            </summary>
            <param name="value">The value of the string</param>
            <param name="argumentName">Name of the parameter</param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ValidateNotNull(System.Object,System.String)">
            <summary>
            Validates an object is not null
            </summary>
            <param name="value">The value of the object</param>
            <param name="argumentName">Name of the parameter</param>
        </member>
        <member name="M:BinanceAPI.ExtensionMethods.ValidateNotNull``1(System.Collections.Generic.IEnumerable{``0},System.String)">
            <summary>
            Validates a list is not null or empty
            </summary>
            <param name="value">The value of the object</param>
            <param name="argumentName">Name of the parameter</param>
        </member>
        <member name="T:BinanceAPI.Json">
            <summary>
            Serialize / Deserialize / Debug Json
            This class is very different in Debug vs Release Mode and will affect performance greatly
            </summary>
        </member>
        <member name="P:BinanceAPI.Json.DefaultSerializer">
            <summary>
            The Serializer
            </summary>
        </member>
        <member name="M:BinanceAPI.Json.Deserialize``1(Newtonsoft.Json.Linq.JToken,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Deserialize a JToken into an object
            </summary>
            <typeparam name="T">The type to deserialize into</typeparam>
            <param name="obj">The data to deserialize</param>
            <param name="checkObject">Whether or not the parsing should be checked for missing properties (will output data to the logging if log verbosity is Debug)</param>
            <param name="requestId">Id of the request the data is returned from (used for grouping logging by request)</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Json.Deserialize``1(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32})">
            <summary>
            Deserialize a string into an object
            </summary>
            <typeparam name="T">The type to deserialize into</typeparam>
            <param name="data">The data to deserialize</param>
            <param name="checkObject">Whether or not the parsing should be checked for missing properties (will output data to the logging if log verbosity is Debug)</param>
            <param name="requestId">Id of the request the data is returned from (used for grouping logging by request)</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Json.DeserializeAsync``1(System.IO.Stream,System.Nullable{System.Int32})">
            <summary>
            Deserialize a stream into an object
            </summary>
            <typeparam name="T">The type to deserialize into</typeparam>
            <param name="stream">The stream to deserialize</param>
            <param name="requestId">Id of the request the data is returned from (used for grouping logging by request)</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Logging">
            <summary>
            Log implementation
            </summary>
        </member>
        <member name="P:BinanceAPI.Logging.TimeLog">
            <summary>
            Binance Time Log
            </summary>
        </member>
        <member name="P:BinanceAPI.Logging.ClientLog">
            <summary>
            Binance Client Log
            </summary>
        </member>
        <member name="P:BinanceAPI.Logging.SocketLog">
            <summary>
            Socket Client Log
            </summary>
        </member>
        <member name="P:BinanceAPI.Logging.OrderBookLog">
            <summary>
            Order Book Log
            </summary>
        </member>
        <member name="T:BinanceAPI.Options.BaseOptions">
            <summary>
            Base options
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.BaseOptions.LogLevel">
            <summary>
            The minimum log level to output. Setting it to null will send all messages to the registered ILoggers.
            <para>Default Information</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.BaseOptions.LogPath">
            <summary>
            The Path to the log for this client
            <para>This is set by the first SocketClient</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.BaseOptions.LogToConsole">
            <summary>
            True if messages should also be logged to the console
            <para>Default True</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.BaseOptions.OutputOriginalData">
            <summary>
            If true, the CallResult and DataEvent objects will also include the originally received json data in the OriginalData property
            <para>Default false</para>
            </summary>
        </member>
        <member name="M:BinanceAPI.Options.BaseOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Options.ClientOptions">
            <summary>
            Base client options
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.ClientOptions.ShouldCheckObjects">
            <summary>
            Should check objects for missing properties based on the model and the received JSON
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.ClientOptions.Proxy">
            <summary>
            Proxy to use
            </summary>
        </member>
        <member name="M:BinanceAPI.Options.ClientOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Options.RestClientOptions">
            <summary>
            Base for rest client options
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.RestClientOptions.RequestTimeout">
            <summary>
            The time the server has to respond to a request before timing out
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.RestClientOptions.HttpClient">
            <summary>
            Http client to use. If a HttpClient is provided in this property the RequestTimeout and Proxy options will be ignored in requests and should be set on the provided HttpClient instance
            </summary>
        </member>
        <member name="M:BinanceAPI.Options.RestClientOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Options.OrderBookOptions">
            <summary>
            Base for order book options
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.OrderBookOptions.OrderBookName">
            <summary>
            The name of the order book implementation
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.OrderBookOptions.ChecksumValidationEnabled">
            <summary>
            Whether or not checksum validation is enabled. Default is true, disabling will ignore checksum messages.
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.OrderBookOptions.SequenceNumbersAreConsecutive">
            <summary>
            Whether each update should have a consecutive id number. Used to identify and reconnect when numbers are skipped.
            </summary>
        </member>
        <member name="P:BinanceAPI.Options.OrderBookOptions.StrictLevels">
            <summary>
            Whether or not a level should be removed from the book when it's pushed out of scope of the limit. For example with a book of limit 10,
            when a new bid level is added which makes the total amount of bids 11, should the last bid entry be removed
            </summary>
        </member>
        <member name="M:BinanceAPI.Options.OrderBookOptions.#ctor(System.String,System.Boolean,System.Boolean,System.String,SimpleLog4.NET.LogLevel,System.Boolean)">
            <summary>
            ctor
            </summary>
            <param name="name">The name of the order book implementation</param>
            <param name="sequencesAreConsecutive">Whether each update should have a consecutive id number. Used to identify and reconnect when numbers are skipped.</param>
            <param name="strictLevels">Whether or not a level should be removed from the book when it's pushed out of scope of the limit. For example with a book of limit 10,
            when a new bid is added which makes the total amount of bids 11, should the last bid entry be removed</param>
            <param name="logPath">Path to the log</param>
            <param name="logLevel">Log level for the log</param>
            <param name="logToConsole">Ture if messages should also be logged to the console</param>
        </member>
        <member name="M:BinanceAPI.Options.OrderBookOptions.ToString">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Requests.GetUriString">
            <summary>
            Uniform Resource Indentifier
            https://en.wikipedia.org/wiki/Uniform_Resource_Identifier
            </summary>
        </member>
        <member name="M:BinanceAPI.Requests.GetUriString.Combine(System.String,System.String,System.String)">
            <summary>
            Create a new Uri to complete a Request
            </summary>
            <param name="endpoint">API Endpoint</param>
            <param name="apiVersion">API Version</param>
            <param name="endpointVersion">API Endpoint Version</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Requests.Request">
            <summary>
            Request object
            </summary>
        </member>
        <member name="M:BinanceAPI.Requests.Request.#ctor(System.Net.Http.HttpRequestMessage,System.Net.Http.HttpClient,System.Int32)">
            <summary>
            Create request object for web request
            </summary>
            <param name="request"></param>
            <param name="client"></param>
            <param name="requestId"></param>
        </member>
        <member name="P:BinanceAPI.Requests.Request.Content">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Requests.Request.Accept">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Requests.Request.Uri">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Requests.Request.RequestId">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Request.SetContent(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Request.AddHeader(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Request.GetHeaders">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Request.GetResponseAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Requests.RequestFactory">
            <summary>
            WebRequest factory
            </summary>
        </member>
        <member name="M:BinanceAPI.Requests.RequestFactory.Configure(System.TimeSpan,BinanceAPI.Objects.ApiProxy,System.Net.Http.HttpClient)">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.RequestFactory.Create(System.Net.Http.HttpMethod,System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Requests.Response">
            <summary>
            HttpWebResponse response object
            </summary>
        </member>
        <member name="P:BinanceAPI.Requests.Response.StatusCode">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Requests.Response.IsSuccessStatusCode">
            <inheritdoc />
        </member>
        <member name="P:BinanceAPI.Requests.Response.ResponseHeaders">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Response.#ctor(System.Net.Http.HttpResponseMessage)">
            <summary>
            Create response for a http response message
            </summary>
            <param name="response">The actual response</param>
        </member>
        <member name="M:BinanceAPI.Requests.Response.GetResponseStreamAsync">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.Requests.Response.Close">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Sockets.DataEvent`1">
            <summary>
            An update received from a socket update subscription
            </summary>
            <typeparam name="T">The type of the data</typeparam>
        </member>
        <member name="P:BinanceAPI.Sockets.DataEvent`1.Timestamp">
            <summary>
            The timestamp the data was received
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.DataEvent`1.Topic">
            <summary>
            The topic of the update, what symbol/asset etc..
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.DataEvent`1.OriginalData">
            <summary>
            The original data that was received, only available when OutputOriginalData is set to true in the client options
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.DataEvent`1.Data">
            <summary>
            The received data deserialized into an object
            </summary>
        </member>
        <member name="M:BinanceAPI.Sockets.DataEvent`1.#ctor(`0,System.DateTime)">
             <summary>
            
             </summary>
             <param name="data">The received data deserialized into an object</param>
             <param name="timestamp">timestamp that indicates when the event happened</param>
        </member>
        <member name="M:BinanceAPI.Sockets.DataEvent`1.As``1(``0)">
            <summary>
            Create a new DataEvent with data in the from of type K based on the current DataEvent. Topic, OriginalData and Timestamp will be copied over
            </summary>
            <typeparam name="K">The type of the new data</typeparam>
            <param name="data">The new data</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Sockets.DataEvent`1.As``1(``0,System.String)">
            <summary>
            Create a new DataEvent with data in the from of type K based on the current DataEvent. OriginalData and Timestamp will be copied over
            </summary>
            <typeparam name="K">The type of the new data</typeparam>
            <param name="data">The new data</param>
            <param name="topic">The new topic</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Sockets.MessageEvent">
            <summary>
            Message received event
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.MessageEvent.JsonData">
            <summary>
            The json object of the data
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.MessageEvent.OriginalData">
            <summary>
            The originally received string data
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.MessageEvent.ReceivedTimestamp">
            <summary>
            The timestamp of when the data was received
            </summary>
        </member>
        <member name="M:BinanceAPI.Sockets.MessageEvent.#ctor(Newtonsoft.Json.Linq.JToken,System.String,System.DateTime)">
            <summary>
            The Message
            </summary>
            <param name="jsonData"></param>
            <param name="originalData"></param>
            <param name="timestamp"></param>
        </member>
        <member name="T:BinanceAPI.Sockets.SocketSubscription">
            <summary>
            Socket subscription
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.SocketSubscription.Id">
            <summary>
            Subscription id
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.SocketSubscription.MessageHandler">
            <summary>
            Message handler for this subscription.
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.SocketSubscription.Request">
            <summary>
            Request object
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.SocketSubscription.UserSubscription">
            <summary>
            Is user subscription or generic
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.SocketSubscription.Confirmed">
            <summary>
            If the subscription has been confirmed
            </summary>
        </member>
        <member name="M:BinanceAPI.Sockets.SocketSubscription.CreateForRequest(System.Int32,System.Object,System.Boolean,System.Action{BinanceAPI.Sockets.MessageEvent})">
            <summary>
            Create SocketSubscription for a request
            </summary>
            <param name="id"></param>
            <param name="request"></param>
            <param name="userSubscription"></param>
            <param name="dataHandler"></param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Sockets.UpdateSubscription">
            <summary>
            Subscription to a data stream
            </summary>
        </member>
        <member name="F:BinanceAPI.Sockets.UpdateSubscription.Connection">
            <summary>
            The Socket Connection
            </summary>
        </member>
        <member name="E:BinanceAPI.Sockets.UpdateSubscription.ConnectionRestored">
            <summary>
            Event when the connection is restored. Timespan parameter indicates the time the socket has been offline for before reconnecting.
            Note that when the executing code is suspended and resumed at a later period (for example laptop going to sleep) the disconnect time will be incorrect as the diconnect
            will only be detected after resuming. This will lead to an incorrect disconnected timespan.
            </summary>
        </member>
        <member name="E:BinanceAPI.Sockets.UpdateSubscription.StatusChanged">
            <summary>
            Occurs when the status of the socket changes
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.UpdateSubscription.SocketId">
            <summary>
            The id of the socket
            </summary>
        </member>
        <member name="P:BinanceAPI.Sockets.UpdateSubscription.Id">
            <summary>
            The id of the subscription
            </summary>
        </member>
        <member name="M:BinanceAPI.Sockets.UpdateSubscription.#ctor(BinanceAPI.ClientBase.BaseSocketClient,BinanceAPI.Sockets.SocketSubscription)">
            <summary>
            ctor
            </summary>
            <param name="connection">The socket connection the subscription is on</param>
            <param name="subscription">The subscription</param>
        </member>
        <member name="M:BinanceAPI.Sockets.UpdateSubscription.CloseAndDisposeAsync">
            <summary>
            Close the subscription and release the managed resources it is consuming
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Sockets.UpdateSubscription.ReconnectAsync">
            <summary>
            Close the socket to cause a reconnect
            You can only attempt this once every 5 Seconds
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Sockets.UpdateSubscription.UnsubscribeAsync">
            <summary>
            Unsubscribe a subscription
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Sockets.UpdateSubscription.ResubscribeAsync">
            <summary>
            Resubscribe this subscription
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.OrderBook.ProcessBufferRangeSequenceEntry">
            <summary>
            Buffer entry with a first and last update id
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.ProcessBufferRangeSequenceEntry.FirstUpdateId">
            <summary>
            First update id
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.ProcessBufferRangeSequenceEntry.LastUpdateId">
            <summary>
            Last update id
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.ProcessBufferRangeSequenceEntry.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.ProcessBufferRangeSequenceEntry.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="T:BinanceAPI.OrderBook.SymbolOrderBook">
            <summary>
            Base for order book implementations
            </summary>
        </member>
        <member name="F:BinanceAPI.OrderBook.SymbolOrderBook.processBuffer">
            <summary>
            The process buffer, used while syncing
            </summary>
        </member>
        <member name="F:BinanceAPI.OrderBook.SymbolOrderBook.asks">
            <summary>
            The ask list
            </summary>
        </member>
        <member name="F:BinanceAPI.OrderBook.SymbolOrderBook.bids">
            <summary>
            The bid list
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Id">
            <summary>
            Order book implementation id
            </summary>
        </member>
        <member name="F:BinanceAPI.OrderBook.SymbolOrderBook.bookSet">
            <summary>
            If order book is set
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Levels">
            <summary>
            The amount of levels for this book
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Status">
            <summary>
            The status of the order book. Order book is up to date when the status is `Synced`
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.LastSequenceNumber">
            <summary>
            Last update identifier
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Symbol">
            <summary>
            The symbol of the order book
            </summary>
        </member>
        <member name="E:BinanceAPI.OrderBook.SymbolOrderBook.OnStatusChange">
            <summary>
            Event when the state changes
            </summary>
        </member>
        <member name="E:BinanceAPI.OrderBook.SymbolOrderBook.OnBestOffersChanged">
            <summary>
            Event when the BestBid or BestAsk changes ie a Pricing Tick
            </summary>
        </member>
        <member name="E:BinanceAPI.OrderBook.SymbolOrderBook.OnOrderBookUpdate">
            <summary>
            Event when order book was updated, containing the changed bids and asks. Be careful! It can generate a lot of events at high-liquidity markets
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.LastOrderBookUpdate">
            <summary>
            Timestamp of the last update
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.AskCount">
            <summary>
            The number of asks in the book
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.BidCount">
            <summary>
            The number of bids in the book
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.Book">
            <summary>
            Get a snapshot of the book at this moment
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.BestBid">
            <summary>
            The best bid currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.BestAsk">
            <summary>
            The best ask currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.OrderBook.SymbolOrderBook.BestOffers">
            <summary>
            BestBid/BesAsk returned as a pair
            </summary>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.#ctor(System.String,BinanceAPI.Options.OrderBookOptions)">
            <summary>
            ctor
            </summary>
            <param name="symbol"></param>
            <param name="options"></param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.StartAsync">
            <summary>
            Start connecting and synchronizing the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.CalculateAverageFillPrice(System.Decimal,BinanceAPI.Enums.OrderBookEntryType)">
            <summary>
            Get the average price that a market order would fill at at the current order book state. This is no guarentee that an order of that quantity would actually be filled
            at that price since between this calculation and the order placement the book can have changed.
            </summary>
            <param name="quantity">The quantity in base asset to fill</param>
            <param name="type">The type</param>
            <returns>Average fill price</returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.StopAsync">
            <summary>
            Stop syncing the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.DoStartAsync">
            <summary>
            Start the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.DoResyncAsync">
            <summary>
            Resync the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.DoChecksum(System.Int32)">
            <summary>
            Validate a checksum with the current order book
            </summary>
            <param name="checksum"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.SetInitialOrderBook(System.Int64,System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry},System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry})">
            <summary>
            Set the initial data for the order book
            </summary>
            <param name="orderBookSequenceNumber">The last update sequence number</param>
            <param name="askList">List of asks</param>
            <param name="bidList">List of bids</param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.UpdateOrderBook(System.Int64,System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry},System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry})">
            <summary>
            Update the order book using a single id for an update
            </summary>
            <param name="rangeUpdateId"></param>
            <param name="bids"></param>
            <param name="asks"></param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.AddChecksum(System.Int32)">
            <summary>
            Add a checksum to the process queue
            </summary>
            <param name="checksum"></param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.UpdateOrderBook(System.Int64,System.Int64,System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry},System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderBookEntry})">
            <summary>
            Update the order book using a first/last update id
            </summary>
            <param name="firstUpdateId"></param>
            <param name="lastUpdateId"></param>
            <param name="bids"></param>
            <param name="asks"></param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.UpdateOrderBook(System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderSequencedBookEntry},System.Collections.Generic.IEnumerable{BinanceAPI.Interfaces.ISymbolOrderSequencedBookEntry})">
            <summary>
            Update the order book using sequenced entries
            </summary>
            <param name="bids">List of bids</param>
            <param name="asks">List of asks</param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.CheckProcessBuffer">
            <summary>
            Check and empty the process buffer; see what entries to update the book with
            </summary>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.ProcessUpdate(System.Int64,BinanceAPI.Enums.OrderBookEntryType,BinanceAPI.Interfaces.ISymbolOrderBookEntry)">
            <summary>
            Update order book with an entry
            </summary>
            <param name="sequence">Sequence number of the update</param>
            <param name="type">Type of entry</param>
            <param name="entry">The entry</param>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.WaitForSetOrderBookAsync(System.Int32)">
            <summary>
            Wait until the order book has been set
            </summary>
            <param name="timeout">Max wait time</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.Dispose">
            <summary>
            Dispose the order book
            </summary>
        </member>
        <member name="M:BinanceAPI.OrderBook.SymbolOrderBook.ToString(System.Int32)">
            <summary>
            String representation of the top x entries
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SymbolOrderBooks.BinanceSpotSymbolOrderBook">
            <summary>
            Implementation for a synchronized order book. After calling Start the order book will sync itself and keep up to date with new data. It will automatically try to reconnect and resync in case of a lost/interrupted connection.
            Make sure to check the State property to see if the order book is synced.
            </summary>
        </member>
        <member name="M:BinanceAPI.SymbolOrderBooks.BinanceSpotSymbolOrderBook.#ctor(System.String,BinanceAPI.Objects.BinanceOrderBookOptions)">
            <summary>
            Create a new instance
            </summary>
            <param name="symbol">The symbol of the order book</param>
            <param name="options">The options for the order book</param>
        </member>
        <member name="M:BinanceAPI.SymbolOrderBooks.BinanceSpotSymbolOrderBook.DoStartAsync">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.SymbolOrderBooks.BinanceSpotSymbolOrderBook.DoResyncAsync">
            <inheritdoc />
        </member>
        <member name="M:BinanceAPI.SymbolOrderBooks.BinanceSpotSymbolOrderBook.Dispose">
            <inheritdoc />
        </member>
        <member name="T:BinanceAPI.Time.TimeHelper">
            <summary>
            Helpers for the Time Client
            </summary>
        </member>
        <member name="M:BinanceAPI.Time.TimeHelper.ToUnixTimestamp(System.Int64)">
            <summary>
            Create a UNIX timestamp from Epoch Time
            </summary>
            <param name="timeAsTicks"></param>
            <returns></returns>
        </member>
        <member name="F:BinanceAPI.UriBase.CommonEndpoints.API_V3_TIME_SyncTime">
            <summary>
            https://binance-docs.github.io/apidocs/spot/en/#check-server-time
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.POST_NEW_ORDER_NewOrder">
            <summary>
            [POST] https://binance-docs.github.io/apidocs/spot/en/#margin-account-new-order-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.POST_NEW_ORDER_OCO_NewOcoOrder">
            <summary>
            [POST] https://binance-docs.github.io/apidocs/spot/en/#margin-account-new-oco-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_SINGLE_ORDER_GetSingleOrder">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-order-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_OPEN_ORDERS_GetAllOpenOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-orders-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_ALL_ORDERS_GetAllOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-orders-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_ALL_TRADES_GetAllTrades">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-trade-list-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_ORDER_OCO_GetOcoOrder">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_ALL_ORDER_OCO_GetAllOcoOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.GET_ALL_OPEN_OCO_ORDERS_GetAllOpenOcoOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.DELETE_CANCEL_ORDER_CancelOrder">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-order-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.DELETE_CANCEL_ORDER_OCO_CancelOcoOrder">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-oco-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Margin.DELETE_CANCEL_ALL_ORDERS_CancelAllOpenOrders">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-all-open-orders-on-a-symbol-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.POST_NEW_ORDER_NewOrder">
            <summary>
            [POST] https://binance-docs.github.io/apidocs/spot/en/#new-order-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.POST_NEW_ORDER_OCO_NewOcoOrder">
            <summary>
            [POST] https://binance-docs.github.io/apidocs/spot/en/#new-oco-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.POST_NEW_ORDER_TEST_NewOrderTest">
            <summary>
            [POST] https://binance-docs.github.io/apidocs/spot/en/#test-new-order-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_SINGLE_ORDER_GetSingleOrder">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-order-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_OPEN_ORDERS_GetAllOpenOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#current-open-orders-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_ALL_ORDERS_GetAllOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#all-orders-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_ALL_TRADES_GetAllTrades">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#account-trade-list-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_ORDER_OCO_GetOcoOrder">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_ALL_ORDER_OCO_GetAllOcoOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-all-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.GET_ALL_OPEN_OCO_ORDERS_GetAllOpenOcoOrders">
            <summary>
            [GET] https://binance-docs.github.io/apidocs/spot/en/#query-open-oco-user_data
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.DELETE_CANCEL_ORDER_CancelOrder">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-order-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.DELETE_CANCEL_ORDER_OCO_CancelOcoOrder">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-oco-trade
            </summary>
        </member>
        <member name="F:BinanceAPI.UriBase.Spot.DELETE_CANCEL_ALL_ORDERS_CancelAllOpenOrders">
            <summary>
            [DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-all-open-orders-on-a-symbol-trade
            </summary>
        </member>
        <member name="T:BinanceAPI.ClientHosts.BinanceClientHost">
            <summary>
            Base Rest Client
            </summary>
        </member>
        <member name="F:BinanceAPI.ClientHosts.BinanceClientHost.OnOrderPlaced">
            <summary>
            <para>Spot</para>
            Event triggered when an order is placed via any client.
            </summary>
        </member>
        <member name="F:BinanceAPI.ClientHosts.BinanceClientHost.OnOrderCanceled">
            <summary>
            <para>Spot</para>
            <para>Note that this does not trigger when using CancelAllOrdersAsync.</para>
            Event triggered when an order is cancelled via any client.
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.General">
            <summary>
            General endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.Margin">
            <summary>
            (Isolated) Margin endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.Spot">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.Lending">
            <summary>
            Lending endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.WithdrawDeposit">
            <summary>
            Withdraw/deposit endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.Fiat">
            <summary>
            Fiat endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.DefaultOptions">
            <summary>
            The Default Options or the Options that you Set
            <para>new BinanceClientOptions() creates the standard defaults regardless of what you set this to</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.RequestFactory">
            <summary>
            The factory for creating requests.
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.RequestTimeout">
            <summary>
            Timeout for requests. This setting is ignored when injecting a HttpClient in the options, requests timeouts should be set on the client then.
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.TotalRequestsMade">
            <summary>
            Total requests made by this client
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.BinanceClientHost.ParameterPositions">
            <summary>
            Where to put the parameters for requests with different Http methods
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.#ctor(System.Threading.CancellationToken)">
            <summary>
            Create a new instance of BinanceClient using the default options
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.#ctor(BinanceAPI.Objects.BinanceClientHostOptions,System.Threading.CancellationToken)">
            <summary>
            Create a new instance of BinanceClient using provided options
            </summary>
            <param name="options">BinanceClientOptions</param>
            <param name="waitToken">Wait token for Server Time Client</param>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.SetDefaultOptions(BinanceAPI.Objects.BinanceClientHostOptions)">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.Ping(System.Threading.CancellationToken)">
            <summary>
            Ping to see if the server is reachable
            </summary>
            <returns>The roundtrip time of the ping request</returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Ping to see if the server is reachable
            </summary>
            <returns>The roundtrip time of the ping request</returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.SendRequestAsync``1(System.String,System.Net.Http.HttpMethod,System.Threading.CancellationToken,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,System.Boolean,System.Nullable{BinanceAPI.Enums.HttpMethodParameterPosition},System.Nullable{BinanceAPI.Enums.ArrayParametersSerialization},System.Int32,Newtonsoft.Json.JsonSerializer,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Execute a request to the uri and deserialize the response into the provided type parameter
            </summary>
            <typeparam name="T">The type to deserialize into</typeparam>
            <param name="uri">The uri to send the request to</param>
            <param name="method">The method of the request</param>
            <param name="cancellationToken">Cancellation token</param>
            <param name="parameters">The parameters of the request</param>
            <param name="signed">Whether or not the request should be authenticated</param>
            <param name="checkResult">Whether or not the resulting object should be checked for missing properties in the mapping (only outputs if log verbosity is Debug)</param>
            <param name="parameterPosition">Where the parameters should be placed, overwrites the value set in the client</param>
            <param name="arraySerialization">How array parameters should be serialized, overwrites the value set in the client</param>
            <param name="credits">Credits used for the request</param>
            <param name="deserializer">The JsonSerializer to use for deserialization</param>
            <param name="additionalHeaders">Additional headers to send with the request</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.GetResponseAsync``1(BinanceAPI.Requests.Request,Newtonsoft.Json.JsonSerializer,System.Threading.CancellationToken)">
            <summary>
            Executes the request and returns the result deserialized into the type parameter class
            </summary>
            <param name="request">The request object to execute</param>
            <param name="deserializer">The JsonSerializer to use for deserialization</param>
            <param name="cancellationToken">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.ConstructRequest(System.String,System.Net.Http.HttpMethod,System.Collections.Generic.Dictionary{System.String,System.Object},System.Boolean,BinanceAPI.Enums.HttpMethodParameterPosition,BinanceAPI.Enums.ArrayParametersSerialization,System.Int32,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates a request object
            </summary>
            <param name="uri">The uri to send the request to</param>
            <param name="method">The method of the request</param>
            <param name="parameters">The parameters of the request</param>
            <param name="signed">Whether or not the request should be authenticated</param>
            <param name="parameterPosition">Where the parameters should be placed</param>
            <param name="arraySerialization">How array parameters should be serialized</param>
            <param name="requestId">Unique id of a request</param>
            <param name="additionalHeaders">Additional headers to send with the request</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.WriteParamBody(BinanceAPI.Requests.Request,System.Collections.Generic.Dictionary{System.String,System.Object},System.String)">
            <summary>
            Writes the parameters of the request to the request object body
            </summary>
            <param name="request">The request to set the parameters on</param>
            <param name="parameters">The parameters to set</param>
            <param name="contentType">The content type of the data</param>
        </member>
        <member name="M:BinanceAPI.ClientHosts.BinanceClientHost.ParseErrorResponse(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Parse an error response from the server. Only used when server returns a status other than Success(200)
            </summary>
            <param name="error">The string the request returned</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.ClientHosts.SocketClientHost">
            <summary>
            Base for socket client implementations
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.SocketClientHost.Spot">
            <summary>
            Spot Stream Endpoints
            </summary>
        </member>
        <member name="F:BinanceAPI.ClientHosts.SocketClientHost.DefaultOptions">
            <summary>
            The Default Options or the Options that you Set
            <para>new BinanceSocketClientOptions() creates the standard defaults regardless of what you set this to</para>
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.#ctor">
            <summary>
            Create a new instance of BinanceSocketClient with default options
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.#ctor(BinanceAPI.Objects.SocketClientHostOptions)">
            <summary>
            Create a new instance of BinanceSocketClient using provided options
            </summary>
            <param name="options">The options to use for this client</param>
        </member>
        <member name="F:BinanceAPI.ClientHosts.SocketClientHost.AllSockets">
            <summary>
            List of socket connections currently connecting/connected
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.SocketClientHost.MaxSocketConnections">
            <summary>
            The max amount of concurrent socket connections
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.SocketClientHost.MaxReconnectTries">
            <summary>
            The maximum number of times to try to reconnect
            </summary>
        </member>
        <member name="P:BinanceAPI.ClientHosts.SocketClientHost.MaxConcurrentResubscriptionsPerSocket">
            <summary>
            Max number of concurrent resubscription tasks per socket after reconnecting a socket
            </summary>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.SetDefaultOptions(BinanceAPI.Objects.SocketClientHostOptions)">
            <summary>
            Set the default options to be used when creating new socket clients
            </summary>
            <param name="options"></param>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.SubscribeAsync``1(System.String,System.Object,System.Boolean,System.Action{BinanceAPI.Sockets.DataEvent{``0}},BinanceAPI.ClientHosts.SocketClientHost)">
            <summary>
            Connect to an url and listen for data
            </summary>
            <typeparam name="T">The type of the expected data</typeparam>
            <param name="url">The URL to connect to</param>
            <param name="request">The optional request object to send, will be serialized to json</param>
            <param name="authenticated">If the subscription is to an authenticated endpoint</param>
            <param name="dataHandler">The handler of update data</param>
            <param name="host">Socket Host</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.SubscribeAndWaitAsync(BinanceAPI.ClientBase.BaseSocketClient,System.Object,BinanceAPI.Sockets.SocketSubscription)">
            <summary>
            Sends the subscribe request and waits for a response to that request
            </summary>
            <param name="baseSocketClient">The connection to send the request on</param>
            <param name="request">The request to send, will be serialized to json</param>
            <param name="subscription">The subscription the request is for</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.HandleSubscriptionResponse(System.Object,Newtonsoft.Json.Linq.JToken,BinanceAPI.Objects.CallResult{System.Object}@)">
            <summary>
            The socketConnection received data (the data JToken parameter). The implementation of this method should check if the received data is a response to the subscription request that was send (the request parameter).
            For example; A subscribe request message is send with an Id parameter with value 10. The socket receives data and calls this method to see if the data it received is an
            anwser to any subscription request that was done. The implementation of this method should check if the response.Id == request.Id to see if they match (assuming the api has some sort of Id tracking on messages,
            if not some other method has be implemented to match the messages).
            If the messages match, the callResult out parameter should be set with the deserialized data in the from of (T) and return true.
            </summary>
            <param name="request">The request that the subscription sent</param>
            <param name="message">JToken</param>
            <param name="callResult">The interpretation (null if message wasn't a response to the request)</param>
            <returns>True if the message was a response to the subscription request</returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.MessageMatchesHandler(Newtonsoft.Json.Linq.JToken,System.Object)">
            <summary>
            Needs to check if a received message matches a handler by request. After subscribing data message will come in. These data messages need to be matched to a specific connection
            to pass the correct data to the correct handler. The implementation of this method should check if the message received matches the subscribe request that was sent.
            </summary>
            <param name="message">The received data</param>
            <param name="request">The subscription request</param>
            <returns>True if the message is for the subscription which sent the request</returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.UnsubscribeAsync(BinanceAPI.ClientBase.BaseSocketClient,BinanceAPI.Sockets.SocketSubscription)">
            <summary>
            Needs to unsubscribe a subscription, typically by sending an unsubscribe request.
            </summary>
            <param name="socketClient">The connection on which to unsubscribe</param>
            <param name="subscription">The subscription to unsubscribe</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.AddSubscription``1(System.Object,System.Boolean,BinanceAPI.ClientBase.BaseSocketClient,System.Action{BinanceAPI.Sockets.DataEvent{``0}})">
            <summary>
            Add a subscription to a connection
            </summary>
            <typeparam name="T">The type of data the subscription expects</typeparam>
            <param name="request">The request of the subscription</param>
            <param name="userSubscription">Whether or not this is a user subscription (counts towards the max amount of handlers on a socket)</param>
            <param name="connection">The socket connection the handler is on</param>
            <param name="dataHandler">The handler of the data received</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.HandleUnhandledMessage(Newtonsoft.Json.Linq.JToken)">
            <summary>
            Process an unhandled message
            </summary>
            <param name="token">The token that wasn't processed</param>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.UnsubscribeAsync(BinanceAPI.Sockets.UpdateSubscription)">
            <summary>
            Unsubscribe an update subscription
            </summary>
            <param name="subscription">The subscription to unsubscribe</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.UnsubscribeAllAsync">
            <summary>
            Unsubscribe all subscriptions
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ClientHosts.SocketClientHost.Dispose">
            <summary>
            Dispose the client
            </summary>
        </member>
        <member name="T:BinanceAPI.ServerTimeClient">
            <summary>
            The <see href="ServerTimeClient"/>
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.CorrectionCount">
            <summary>
            Increments when the time went out of sync, caused an error and needed to be corrected
            <para>This value won't reset until you restart your application</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.MissedPingCount">
            <summary>
            Missed Pings, These will be ignored and are counted to troubleshoot connection issues
            <para>This value won't reset until you restart your application</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.GuesserAttemptCount">
            <summary>
            The number of times the Guesser has Ran to Completion
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.Exists">
            <summary>
            True if an instance of the Server Time Client should already exist
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.PingTicks">
            <summary>
            Your Ping Divided By 2 Last Time You Synced The Time
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.RemoteTime">
            <summary>
            The Current Remote Time Reported By The Server
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.GuessOffset">
            <summary>
            The Current Guess Offset
            </summary>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.IsReady">
            <summary>
            True when the <see href="ServerTimeClient"/> is Ready
            <para>Authenticated Requests will fail until Ready is true</para>
            </summary>
        </member>
        <member name="P:BinanceAPI.ServerTimeClient.ServerTimeTicks">
            <summary>
            The Current Server Time Guess in Ticks
            </summary>
        </member>
        <member name="F:BinanceAPI.ServerTimeClient.LoopToken">
            <summary>
            Cancel the Server Time Updater Loop
            </summary>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.Start(BinanceAPI.Objects.BinanceClientHostOptions,System.Threading.CancellationToken)">
            <summary>
            Start the <see href="ServerTimeClient"/>
            </summary>
            <param name="clientOptions"></param>
            <param name="waitToken">Cancellation token for the Start Wait</param>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.Stop">
            <summary>
            Stop the Server Time Client
            </summary>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.WaitForStart(System.Threading.CancellationToken)">
            <summary>
            Wait for the Server Time Client to Start
            </summary>
            <param name="token">Cancellation token for timeout etc</param>
            <returns>The amount of time the Server Time Client took to Start in Milliseconds</returns>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.Guesser">
            <summary>
            Guess the Server Time
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.GetServerTimeTicksAsync(System.Threading.CancellationToken)">
            <summary>
            The Current Server Time as Reported By The Server
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.GetRequestTimestamp">
            <summary>
            Get the current Server Time from the <see href="ServerTimeClient"/> for use in a Request
            <para>This value is not directly retrieved from the Server, It is a derived Guess</para>
            </summary>
            <returns>Will return an empty string if the <see href="ServerTimeClient"/> is missing</returns>
        </member>
        <member name="M:BinanceAPI.ServerTimeClient.GetRequestTimestampLong">
            <summary>
            Get the current Server Time from the <see href="ServerTimeClient"/> for use in a Request
            <para>This value is not directly retrieved from the Server, It is a derived Guess</para>
            </summary>
            <returns>Will return an empty string if the <see href="ServerTimeClient"/> is missing</returns>
        </member>
        <member name="T:BinanceAPI.UriClient">
            <summary>
            The Static Client that manages Uris for Requests
            </summary>
        </member>
        <member name="P:BinanceAPI.UriClient.GetEndpoint">
            <summary>
            API Endpoint Uri Helper
            </summary>
        </member>
        <member name="M:BinanceAPI.UriClient.GetBaseAddress">
            <summary>
            Get the current Api Endpoint Base Address
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.UriClient.GetStream">
            <summary>
            Get the current Web Socket Stream for the Endpoint Controller that is currently selected
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.BinanceClientFiat">
            <summary>
            Liquid swap endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientFiat.GetFiatPaymentHistoryAsync(BinanceAPI.Enums.OrderSide,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat payment history
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientFiat.GetFiatDepositWithdrawHistoryAsync(BinanceAPI.Enums.TransactionType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get Fiat deposit/withdrawal history
            </summary>
            <param name="side">Filter by side</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Return a specific page</param>
            <param name="limit">The page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.BinanceClientGeneral">
            <summary>
            General endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetDailySpotAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (balances)
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetDailyMarginAccountSnapshotAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get a daily account snapshot (assets)
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="limit">The amount of days to retrieve</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetAccountStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the account associated with the api key/secret
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Account status</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets account information, including balances
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The account information</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trading status for the current account
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The trading status of the account</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetFundingWalletAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get funding wallet assets
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="needBtcValuation">Return BTC valuation</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of assets</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetAPIKeyPermissionsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get permission info for the current API key
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Permission info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetUserCoinsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets information of coins for a user
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Coins info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetAssetDividendRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get asset dividend records
            </summary>
            <param name="asset">Filter by asset</param>
            /// <param name="startTime">Filter by start time from</param>
            <param name="endTime">Filter by end time till</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dividend records</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.DisableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            This request will disable fastwithdraw switch under your account.
            You need to enable "trade" option for the api key which requests this endpoint.
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.EnableFastWithdrawSwitchAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
             <summary>
             This request will enable fastwithdraw switch under your account.
             You need to enable "trade" option for the api key which requests this endpoint.
            
             When Fast Withdraw Switch is on, transferring funds to a Binance account will be done instantly.
             There is no on-chain transaction, no transaction ID and no withdrawal fee.
             </summary>
             <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
             <param name="ct">Cancellation token</param>
             <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetDustLogAsync(System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the history of dust conversions
            </summary>
            <param name="startTime">The start time</param>
            <param name="endTime">The end time</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The history of dust conversions</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.DustTransferAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Converts dust (small amounts of) assets to BNB
            </summary>
            <param name="assets">The assets to convert to BNB</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Dust transfer result</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetBnbBurnStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the status of the BNB burn switch for spot trading and margin interest
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.SetBnbBurnStatusAsync(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Sets the status of the BNB burn switch for spot trading and margin interest
            </summary>
            <param name="spotTrading">If BNB burning should be enabled for spot trading</param>
            <param name="marginInterest">If BNB burning should be enabled for margin interest</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.TransferAsync(BinanceAPI.Enums.UniversalTransferType,System.String,System.Decimal,System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfers between accounts
            </summary>
            <param name="type">The type of transfer</param>
            <param name="asset">The asset to transfer</param>
            <param name="amount">The amount to transfer</param>
            <param name="fromSymbol">From symbol when transfering from/to isolated margin</param>
            <param name="toSymbol">To symbol when transfering from/to isolated margin</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetTransfersAsync(BinanceAPI.Enums.UniversalTransferType,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get transfer history
            </summary>
            <param name="type">The type of transfer</param>
            <param name="startTime">Filter by startTime</param>
            <param name="endTime">Filter by endTime</param>
            <param name="page">The page</param>
            <param name="pageSize">Results per page</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientGeneral.GetProductsAsync(System.Threading.CancellationToken)">
            <summary>
            Get general data for the products available on Binance
            NOTE: This is not an official endpoint and might be changed or removed at any point by Binance
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.BinanceClientLending">
            <summary>
            Lending endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetFlexibleProductListAsync(System.Nullable{BinanceAPI.Enums.ProductStatus},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get product list
            </summary>
            <param name="status">Filter by status</param>
            <param name="featured">Filter by featured</param>
            <param name="page">Page to retrieve</param>
            <param name="pageSize">Page size to return</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of product</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetLeftDailyPurchaseQuotaOfFlexableProductAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the purchase quota left for a product
            </summary>
            <param name="productId">Id of the product</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Quota left</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.PurchaseFlexibleProductAsync(System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Purchase flexible product
            </summary>
            <param name="productId">Id of the product</param>
            <param name="amount">The amount to purchase</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetLeftDailyRedemptionQuotaOfFlexibleProductAsync(System.String,BinanceAPI.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the redemption quota left for a product
            </summary>
            <param name="productId">Id of the product</param>
            <param name="type">Type</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Quota left</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.RedeemFlexibleProductAsync(System.String,System.Decimal,BinanceAPI.Enums.RedeemType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Redeem flexible product
            </summary>
            <param name="productId">Id of the product</param>
            <param name="type">Redeem type</param>
            <param name="amount">The amount to redeem</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetFlexibleProductPositionAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get flexible product position
            <para>will return all positions if asset isn't specified</para>
            </summary>
            <param name="asset">Asset</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Flexible product position</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetFixedAndCustomizedFixedProjectListAsync(BinanceAPI.Enums.ProjectType,System.String,System.Nullable{BinanceAPI.Enums.ProductStatus},System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get fixed and customized fixed project list
            </summary>
            <param name="type">Type of project</param>
            <param name="asset">Asset</param>
            <param name="status">Filter by status</param>
            <param name="sortAscending">If should sort ascending</param>
            <param name="sortBy">Sort by. Valid values: "START_TIME", "LOT_SIZE", "INTEREST_RATE", "DURATION"; default "START_TIME"</param>
            <param name="currentPage">Result page</param>
            <param name="size">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Project list</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.PurchaseCustomizedFixedProjectAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Purchase customized fixed project
            </summary>
            <param name="projectId">Id of the project</param>
            <param name="lot">The lot</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetCustomizedFixedProjectPositionsAsync(System.String,System.String,System.Nullable{BinanceAPI.Enums.ProjectStatus},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get customized fixed project position
            </summary>
            <param name="asset">Asset</param>
            <param name="projectId">The project id</param>
            <param name="status">Filter by status</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Customized fixed project position</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetLendingAccountAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get lending account info
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Lending account</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetPurchaseRecordsAsync(BinanceAPI.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get purchase records
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The purchase records</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetRedemptionRecordsAsync(BinanceAPI.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get redemption records
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The redemption records</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.GetLendingInterestHistoryAsync(BinanceAPI.Enums.LendingType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get interest history
            </summary>
            <param name="lendingType">Lending type</param>
            <param name="asset">Asset</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The interest history</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientLending.ChangeToDailyPositionAsync(System.String,System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Changed fixed/activity position to daily position
            </summary>
            <param name="projectId">Id of the project</param>
            <param name="lot">The lot</param>
            <param name="positionId">For fixed position</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Purchase id</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.BinanceClientWithdrawDeposit">
            <summary>
            Withdraw/Deposit endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientWithdrawDeposit.GetAssetDetailsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdraw/deposit details for an asset
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Asset detail</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientWithdrawDeposit.WithdrawAsync(System.String,System.String,System.Decimal,System.String,System.String,System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Withdraw assets from Binance to an address
            </summary>
            <param name="asset">The asset to withdraw</param>
            <param name="address">The address to send the funds to</param>
            <param name="addressTag">Secondary address identifier for coins like XRP,XMR etc.</param>
            <param name="withdrawOrderId">Custom client order id</param>
            <param name="amount">The amount to withdraw</param>
            <param name="transactionFeeFlag">When making internal transfer, true for returning the fee to the destination account; false for returning the fee back to the departure account. Default false.</param>
            <param name="network">The network to use</param>
            <param name="name">Description of the address</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Withdrawal confirmation</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientWithdrawDeposit.GetWithdrawalHistoryAsync(System.String,System.String,System.Nullable{BinanceAPI.Enums.WithdrawalStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the withdrawal history
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="withdrawOrderId">Filter by withdraw order id</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="limit">Add limit. Default: 1000, Max: 1000</param>
            <param name="offset">Add offset</param>
            <param name="ct">Cancellation token</param>
            <returns>List of withdrawals</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientWithdrawDeposit.GetDepositHistoryAsync(System.String,System.Nullable{BinanceAPI.Enums.DepositStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit history
            </summary>
            <param name="coin">Filter by asset</param>
            <param name="status">Filter by status</param>
            <param name="limit">Amount of results</param>
            <param name="offset">Offset the results</param>
            <param name="startTime">Filter start time from</param>
            <param name="endTime">Filter end time till</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of deposits</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.BinanceClientWithdrawDeposit.GetDepositAddressAsync(System.String,System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the deposit address for an asset
            </summary>
            <param name="coin">Asset to get address for</param>
            <param name="network">Network</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Deposit address</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Margin.BinanceClientMargin">
            <summary>
            Margin endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Margin.BinanceClientMargin.Market">
            <summary>
            Margin market endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Margin.BinanceClientMargin.Order">
            <summary>
            Margin order endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Margin.BinanceClientMargin.UserStream">
            <summary>
            Margin user stream endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Margin.BinanceClientMargin.IsolatedUserStream">
            <summary>
            Isolated margin user stream endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.TransferAsync(System.String,System.Decimal,BinanceAPI.Enums.TransferDirectionType,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Execute transfer between spot account and cross margin account.
            </summary>
            <param name="asset">The asset being transferred, e.g., BTC</param>
            <param name="amount">The amount to be transferred</param>
            <param name="type">TransferDirection (MainToMargin/MarginToMain)</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.BorrowAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Borrow. Apply for a loan.
            </summary>
            <param name="asset">The asset being borrow, e.g., BTC</param>
            <param name="amount">The amount to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.RepayAsync(System.String,System.Decimal,System.Nullable{System.Boolean},System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Repay loan for margin account.
            </summary>
            <param name="asset">The asset being repay, e.g., BTC</param>
            <param name="amount">The amount to be borrow</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="symbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Transaction Id</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetTransferHistoryAsync(BinanceAPI.Enums.TransferDirection,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of transfers
            </summary>
            <param name="direction">The direction of the the transfers to retrieve</param>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of transfers</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetLoansAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query loan records
            </summary>
            <param name="asset">The records asset</param>
            <param name="transactionId">The id of loan transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Number of page records</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Loan records</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetRepaysAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query repay records
            </summary>
            <param name="asset">The records asset</param>
            <param name="transactionId">The id of repay transaction</param>
            <param name="startTime">Time to start getting records from</param>
            <param name="endTime">Time to stop getting records to</param>
            <param name="current">Filter by number</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="size">The records count size need show</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Repay records</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetInterestHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="current">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="archived">Set to true for archived data from 6 months ago</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest events</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetInterestRateHistoryAsync(System.String,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of interest rate
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of interest rate</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetInterestMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get interest margin data
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetInterestIsolatedMarginDataAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get interest isolated margin data
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="vipLevel">Vip level</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetForceLiquidationHistoryAsync(System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get history of forced liquidations
            </summary>
            <param name="page">Results page</param>
            <param name="startTime">Filter by startTime from</param>
            <param name="endTime">Filter by endTime from</param>
            <param name="isolatedSymbol">Filter by isolated symbol</param>
            <param name="limit">Limit of the amount of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of forced liquidations</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetMarginAccountInfoAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query margin account details
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The margin account information</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetMaxBorrowAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max borrow amount
            </summary>
            <param name="asset">The records asset</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Return max amount</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetMaxTransferAmountAsync(System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Query max transfer-out amount
            </summary>
            <param name="asset">The records asset</param>
            <param name="isolatedSymbol">The isolated symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Return max amount</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetIsolatedMarginAccountTransferHistoryAsync(System.String,System.String,System.Nullable{BinanceAPI.Enums.IsolatedMarginTransferDirection},System.Nullable{BinanceAPI.Enums.IsolatedMarginTransferDirection},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get history of transfer to and from the isolated margin account
            </summary>
            <param name="symbol">The symbol</param>
            <param name="asset">Filter by asset</param>
            <param name="from">Filter by direction</param>
            <param name="to">Filter by direction</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="current">Current page</param>
            <param name="limit">Page size</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetIsolatedMarginAccountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin account info
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.DisableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Disabled an isolated margin account
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.EnableIsolatedMarginAccountAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Enable an isolated margin account
            </summary>
            <param name="symbol">Symbol to enable isoldated margin account for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.GetEnabledIsolatedMarginAccountLimitAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get max number of enabled isolated margin accounts
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMargin.IsolatedMarginAccountTransferAsync(System.String,System.String,BinanceAPI.Enums.IsolatedMarginTransferDirection,BinanceAPI.Enums.IsolatedMarginTransferDirection,System.Decimal,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Transfer from or to isolated margin account
            </summary>
            <param name="asset">The asset</param>
            <param name="symbol">Isolated symbol</param>
            <param name="from">From</param>
            <param name="to">To</param>
            <param name="amount">Amount to transfer</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Margin.BinanceClientIsolatedMarginUserStream">
            <summary>
            Margin user stream endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientIsolatedMarginUserStream.StartIsolatedMarginUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Starts a user stream  for margin account by requesting a listen key.
            This listen key can be used in subsequent requests to BinanceSocketClient.Spot.SubscribeToUserDataUpdates
            The stream will close after 60 minutes unless a keep alive is send.
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientIsolatedMarginUserStream.KeepAliveIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream for margin account listen key to keep the stream from closing.
            Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientIsolatedMarginUserStream.CloseIsolatedMarginUserStreamAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Close the user stream for margin account
            </summary>
            <param name="symbol">The isolated symbol</param>
            <param name="listenKey">The listen key to invalidate</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket">
            <summary>
            Margin market endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetMarginAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a margin asset
            </summary>
            <param name="asset">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetMarginPairAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a margin pair
            </summary>
            <param name="symbol">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetMarginAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all assets available for margin trading
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of margin assets</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetMarginPairsAsync(System.Threading.CancellationToken)">
            <summary>
            Get all asset pairs available for margin trading
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of margin pairs</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetMarginPriceIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get margin price index
            </summary>
            <param name="symbol">The symbol to get</param>
            <param name="ct">Cancellation token</param>
            <returns>Margin price index</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetIsolatedMarginSymbolAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin symbol info
            </summary>
            <param name="symbol">The symbol</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginMarket.GetIsolatedMarginSymbolsAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Isolated margin symbol info
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders">
            <summary>
            Margin order endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.PlaceMarginOrderAsync(System.String,BinanceAPI.Enums.OrderSide,BinanceAPI.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.SideEffectType},System.Nullable{System.Boolean},System.Nullable{BinanceAPI.Enums.OrderResponseType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Margin account new order
            <para>[POST] https://binance-docs.github.io/apidocs/spot/en/#margin-account-new-order-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The amount of the symbol</param>
            <param name="quoteOrderQuantity">The amount of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQuantity">Used for iceberg orders</param>
            <param name="sideEffectType">Side effect type for this order</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.CancelMarginOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel an active order for margin account
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-order-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="newClientOrderId">Unique identifier for this cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.CancelOpenMarginOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel all active orders for a symbol
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-all-open-orders-on-a-symbol-trade</para>
            </summary>
            <param name="symbol">The symbol the to cancel orders for</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginAccountOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific margin account order. Either orderId or origClientOrderId should be provided.
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-order-user_data</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific margin account order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginAccountOpenOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open margin account orders
            <para>https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-orders-user_data</para>
            </summary>
            <param name="symbol">The symbol to get open orders for</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open margin account orders</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginAccountOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all margin account orders for the provided symbol
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-orders-user_data</para>
            </summary>
            <param name="symbol">The symbol to get orders for</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin account orders</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.PlaceMarginOCOOrderAsync(System.String,BinanceAPI.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.SideEffectType},System.Nullable{System.Boolean},System.String,System.String,System.String,System.Nullable{BinanceAPI.Enums.OrderResponseType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new margin OCO(One cancels other) order
            <para>[POST] https://binance-docs.github.io/apidocs/spot/en/#margin-account-new-oco-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="stopLimitTimeInForce">Lifetime of the stop order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The amount of the symbol</param>
            <param name="price">The price to use</param>
            <param name="stopPrice">The stop price</param>
            <param name="stopLimitPrice">The price for the stop limit order</param>
            <param name="stopClientOrderId">Client id for the stop order</param>
            <param name="limitClientOrderId">Client id for the limit order</param>
            <param name="listClientOrderId">Client id for the order list</param>
            <param name="limitIcebergQuantity">Iceberg quantity for the limit order</param>
            <param name="sideEffectType">Side effect type</param>
            <param name="isIsolated">Is isolated</param>
            <param name="orderResponseType">Order response type</param>
            <param name="stopIcebergQuantity">Iceberg quantity for the stop order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order list info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.CancelMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending margin oco order
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#margin-account-cancel-oco-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderListId">The id of the order list to cancel</param>
            <param name="listClientOrderId">The client order id of the order list to cancel</param>
            <param name="newClientOrderId">The new client order list id for the order list</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginOcoOrderAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific margin oco order. Either orderListId or listClientOrderId should be provided.
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-oco-user_data</para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="orderListId">The list order id of the order</param>
            <param name="origClientOrderId">Either orderListId or listClientOrderId must be provided</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order list</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of margin oco orders matching the parameters
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-all-oco-user_data</para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="fromId">Only return oco orders with id higher than this</param>
            <param name="startTime">Only return oco orders placed later than this. Only valid if fromId isn't provided</param>
            <param name="endTime">Only return oco orders placed before this. Only valid if fromId isn't provided</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order lists matching the parameters</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetOpenOcoOrdersAsync(System.String,System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of open margin oco orders
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-open-oco-user_data</para>
            </summary>
            <param name="symbol">Mandatory for isolated margin, not supported for cross margin</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Open order lists</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginOrders.GetMarginAccountUserTradesAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user margin account trades for provided symbol
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-margin-account-39-s-trade-list-user_data</para>
            </summary>
            <param name="symbol">Symbol to get trades for</param>
            <param name="limit">The max number of results</param>
            <param name="isIsolated">For isolated margin or not</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of margin account trades</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Margin.BinanceClientMarginUserStream">
            <summary>
            Margin user stream endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginUserStream.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream  for margin account by requesting a listen key.
            This listen key can be used in subsequent requests to BinanceSocketClient.Spot.SubscribeToUserDataUpdates.
            The stream will close after 60 minutes unless a keep alive is send.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginUserStream.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream for margin account listen key to keep the stream from closing.
            Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Margin.BinanceClientMarginUserStream.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Close the user stream for margin account
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Spot.BinanceClientSpot">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Spot.BinanceClientSpot.System">
            <summary>
            Spot system endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Spot.BinanceClientSpot.Market">
            <summary>
            Spot market endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Spot.BinanceClientSpot.Order">
            <summary>
            Spot order endpoints
            </summary>
        </member>
        <member name="P:BinanceAPI.SubClients.Spot.BinanceClientSpot.UserStream">
            <summary>
            Spot user stream endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpot.GetTradingStatusAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trading status for the current account
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The trading status of the account</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket">
            <summary>
            Spot market endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for the provided symbol
            </summary>
            <param name="symbol">The symbol to get the order book for</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The order book for the symbol</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetRecentTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the recent trades for a symbol
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the historical  trades for a symbol
            </summary>
            <param name="symbol">The symbol to get recent trades for</param>
            <param name="limit">Result limit</param>
            <param name="fromId">From which trade id on results should be retrieved</param>
            <param name="ct">Cancellation token</param>
            <returns>List of recent trades</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetAggregatedTradeHistoryAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets compressed, aggregate trades. Trades that fill at the time, from the same order, with the same price will have the quantity aggregated.
            </summary>
            <param name="symbol">The symbol to get the trades for</param>
            <param name="fromId">ID to get aggregate trades from INCLUSIVE.</param>
            <param name="startTime">Time to start getting trades from</param>
            <param name="endTime">Time to stop getting trades from</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The aggregated trades list for the symbol</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetKlinesAsync(System.String,BinanceAPI.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for the provided symbol
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="interval">The candlestick timespan</param>
            <param name="startTime">Start time to get candlestick data</param>
            <param name="endTime">End time to get candlestick data</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns>The candlestick data for the provided symbol</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetCurrentAvgPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets current average price for a symbol
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for the provided symbol
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns>Data over the last 24 hours</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Get data regarding the last 24 hours for all symbols
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of data over the last 24 hours</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the price of a symbol
            </summary>
            <param name="symbol">The symbol to get the price for</param>
            <param name="ct">Cancellation token</param>
            <returns>Price of symbol</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of the prices of all symbols
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of prices</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetBookPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for a symbol.
            </summary>
            <param name="symbol">Symbol to get book price for</param>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetAllBookPricesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the best price/quantity on the order book for all symbols.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>List of book prices</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotMarket.GetTradeFeeAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the trade fee for a symbol
            </summary>
            <param name="symbol">Symbol to get withdrawal fee for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Trade fees</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder">
            <summary>
            Spot order endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.PlaceTestOrderAsync(System.String,BinanceAPI.Enums.OrderSide,BinanceAPI.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new test order. Test orders are not actually being executed and just test the functionality.
            <para>[POST] https://binance-docs.github.io/apidocs/spot/en/#test-new-order-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type (limit/market)</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel)</param>
            <param name="quantity">The amount of the symbol</param>
            <param name="quoteOrderQuantity">The amount of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">User for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed test order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.PlaceOrderAsync(System.String,BinanceAPI.Enums.OrderSide,BinanceAPI.Enums.OrderType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.String,System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.TimeInForce},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.OrderResponseType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new order
            <para>[POST] https://binance-docs.github.io/apidocs/spot/en/#new-order-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="type">The order type</param>
            <param name="timeInForce">Lifetime of the order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="quantity">The amount of the symbol</param>
            <param name="quoteOrderQuantity">The amount of the quote symbol. Only valid for market orders</param>
            <param name="price">The price to use</param>
            <param name="newClientOrderId">Unique id for order</param>
            <param name="stopPrice">Used for stop orders</param>
            <param name="icebergQty">Used for iceberg orders</param>
            <param name="orderResponseType">Used for the response JSON</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for the placed order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.CancelOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending order
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-order-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="newClientOrderId">Unique identifier for this cancel</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.CancelAllOpenOrdersAsync(System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders on a symbol
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-all-open-orders-on-a-symbol-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific order. Either orderId or origClientOrderId should be provided.
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-order-user_data</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderId">The order id of the order</param>
            <param name="origClientOrderId">The client order id of the order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#current-open-orders-user_data</para>
            </summary>
            <param name="symbol">The symbol to get open orders for</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of open orders</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOrdersAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets all orders for the provided symbol
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#all-orders-user_data</para>
            </summary>
            <param name="symbol">The symbol to get orders for</param>
            <param name="orderId">If set, only orders with an order id higher than the provided will be returned</param>
            <param name="startTime">If set, only orders placed after this time will be returned</param>
            <param name="endTime">If set, only orders placed before this time will be returned</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of orders</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.PlaceOcoOrderAsync(System.String,BinanceAPI.Enums.OrderSide,System.Decimal,System.Decimal,System.Decimal,System.Nullable{System.Decimal},System.String,System.String,System.String,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{BinanceAPI.Enums.TimeInForce},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Places a new OCO(One cancels other) order
            [POST] https://binance-docs.github.io/apidocs/spot/en/#new-oco-trade
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">The order side (buy/sell)</param>
            <param name="stopLimitTimeInForce">Lifetime of the stop order (GoodTillCancel/ImmediateOrCancel/FillOrKill)</param>
            <param name="trailingDelta">Trailing delta value for order in BIPS. A value of 1 means 0.01% trailing delta.</param>
            <param name="quantity">The amount of the symbol</param>
            <param name="price">The price to use</param>
            <param name="stopPrice">The stop price</param>
            <param name="stopLimitPrice">The price for the stop limit order</param>
            <param name="stopClientOrderId">Client id for the stop order</param>
            <param name="limitClientOrderId">Client id for the limit order</param>
            <param name="listClientOrderId">Client id for the order list</param>
            <param name="limitIcebergQuantity">Iceberg quantity for the limit order</param>
            <param name="stopIcebergQuantity">Iceberg quantity for the stop order</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order list info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.CancelOcoOrderAsync(System.String,System.Nullable{System.Int64},System.String,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancels a pending oco order
            <para>[DELETE] https://binance-docs.github.io/apidocs/spot/en/#cancel-oco-trade</para>
            </summary>
            <param name="symbol">The symbol the order is for</param>
            <param name="orderListId">The id of the order list to cancel</param>
            <param name="listClientOrderId">The client order id of the order list to cancel</param>
            <param name="newClientOrderId">The new client order list id for the order list</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Id's for canceled order</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOcoOrderAsync(System.Nullable{System.Int64},System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves data for a specific oco order. Either orderListId or listClientOrderId should be provided.
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-oco-user_data</para>
            </summary>
            <param name="orderListId">The list order id of the order</param>
            <param name="origClientOrderId">Either orderListId or listClientOrderId must be provided</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>The specific order list</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOcoOrdersAsync(System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of oco orders matching the parameters
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-all-oco-user_data</para>
            </summary>
            <param name="fromId">Only return oco orders with id higher than this</param>
            <param name="startTime">Only return oco orders placed later than this. Only valid if fromId isn't provided</param>
            <param name="endTime">Only return oco orders placed before this. Only valid if fromId isn't provided</param>
            <param name="limit">Max number of results</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Order lists matching the parameters</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetOpenOcoOrdersAsync(System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Retrieves a list of open oco orders
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#query-open-oco-user_data</para>
            </summary>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>Open order lists</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotOrder.GetUserTradesAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Int32,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets all user trades for provided symbol
            <para>[GET] https://binance-docs.github.io/apidocs/spot/en/#account-trade-list-user_data</para>
            </summary>
            <param name="symbol">Symbol to get trades for</param>
            <param name="orderId">Get trades for this order id</param>
            <param name="limit">The max number of results</param>
            <param name="fromId">TradeId to fetch from. Default gets most recent trades</param>
            <param name="startTime">Orders newer than this date will be retrieved</param>
            <param name="endTime">Orders older than this date will be retrieved</param>
            <param name="receiveWindow">The receive window for which this request is active. When the request takes longer than this to complete the server will reject the request</param>
            <param name="ct">Cancellation token</param>
            <returns>List of trades</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem">
            <summary>
            Spot system endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem.PingAsync(System.Threading.CancellationToken)">
            <summary>
            Pings the Binance API
            </summary>
            <returns>Ping as Ticks</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem.GetExchangeInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Gets information about the exchange including rate limits and symbol list
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem.GetExchangeInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbol
            </summary>
            <param name="symbol">Symbol to get data for token</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem.GetExchangeInfoAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get's information about the exchange including rate limits and information on the provided symbols
            </summary>
            <param name="symbols">Symbols to get data for token</param>
            <param name="ct">Cancellation token</param>
            <returns>Exchange info</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotSystem.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the status of the Binance platform
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>The system status</returns>
        </member>
        <member name="T:BinanceAPI.SubClients.Spot.BinanceClientSpotUserStream">
            <summary>
            Spot user stream endpoints
            </summary>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotUserStream.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. This listen key can be used in subsequent requests to BinanceSocketClient.Spot.SubscribeToUserDataUpdates. The stream will close after 60 minutes unless a keep alive is send.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotUserStream.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.SubClients.Spot.BinanceClientSpotUserStream.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            </summary>
            <param name="listenKey">The listen key to invalidate</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Interfaces.SubClients.IBinanceClientUserStream">
            <summary>
            Interface for user stream
            </summary>
        </member>
        <member name="M:BinanceAPI.Interfaces.SubClients.IBinanceClientUserStream.StartUserStreamAsync(System.Threading.CancellationToken)">
            <summary>
            Starts a user stream by requesting a listen key. The stream will close after 60 minutes unless a keep alive is send.
            </summary>
            <param name="ct">Cancellation token</param>
            <returns>Listen key</returns>
        </member>
        <member name="M:BinanceAPI.Interfaces.SubClients.IBinanceClientUserStream.KeepAliveUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Sends a keep alive for the current user stream listen key to keep the stream from closing. Stream auto closes after 60 minutes if no keep alive is send. 30 minute interval for keep alive is recommended.
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Interfaces.SubClients.IBinanceClientUserStream.StopUserStreamAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Stops the current user stream
            </summary>
            <param name="listenKey">The listen key to keep alive</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Interfaces.ISymbolOrderBook">
            <summary>
            Interface for order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.Status">
            <summary>
            The status of the order book. Order book is up to date when the status is `Synced`
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.LastSequenceNumber">
            <summary>
            Last update identifier
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.Symbol">
            <summary>
            The symbol of the order book
            </summary>
        </member>
        <member name="E:BinanceAPI.Interfaces.ISymbolOrderBook.OnStatusChange">
            <summary>
            Event when the state changes
            </summary>
        </member>
        <member name="E:BinanceAPI.Interfaces.ISymbolOrderBook.OnOrderBookUpdate">
            <summary>
            Event when order book was updated. Be careful! It can generate a lot of events at high-liquidity markets
            </summary>
        </member>
        <member name="E:BinanceAPI.Interfaces.ISymbolOrderBook.OnBestOffersChanged">
            <summary>
            Event when the BestBid or BestAsk changes ie a Pricing Tick
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.LastOrderBookUpdate">
            <summary>
            Timestamp of the last update
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.AskCount">
            <summary>
            The number of asks in the book
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.BidCount">
            <summary>
            The number of bids in the book
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.Book">
            <summary>
            Get a snapshot of the book at this moment
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.Asks">
            <summary>
            The list of asks
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.Bids">
            <summary>
            The list of bids
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.BestBid">
            <summary>
            The best bid currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.BestAsk">
            <summary>
            The best ask currently in the order book
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBook.BestOffers">
            <summary>
            BestBid/BesAsk returned as a pair
            </summary>
        </member>
        <member name="M:BinanceAPI.Interfaces.ISymbolOrderBook.StartAsync">
            <summary>
            Start connecting and synchronizing the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Interfaces.ISymbolOrderBook.StopAsync">
            <summary>
            Stop syncing the order book
            </summary>
            <returns></returns>
        </member>
        <member name="M:BinanceAPI.Interfaces.ISymbolOrderBook.CalculateAverageFillPrice(System.Decimal,BinanceAPI.Enums.OrderBookEntryType)">
            <summary>
            Get the average price that a market order would fill at at the current order book state. This is no guarentee that an order of that quantity would actually be filled
            at that price since between this calculation and the order placement the book can have changed.
            </summary>
            <param name="quantity">The quantity in base asset to fill</param>
            <param name="type">The type</param>
            <returns>Average fill price</returns>
        </member>
        <member name="M:BinanceAPI.Interfaces.ISymbolOrderBook.ToString(System.Int32)">
            <summary>
            String representation of the top x entries
            </summary>
            <returns></returns>
        </member>
        <member name="T:BinanceAPI.Interfaces.ISymbolOrderBookEntry">
            <summary>
            Interface for order book entries
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBookEntry.Quantity">
            <summary>
            The quantity of the entry
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderBookEntry.Price">
            <summary>
            The price of the entry
            </summary>
        </member>
        <member name="T:BinanceAPI.Interfaces.ISymbolOrderSequencedBookEntry">
            <summary>
            Interface for order book entries
            </summary>
        </member>
        <member name="P:BinanceAPI.Interfaces.ISymbolOrderSequencedBookEntry.Sequence">
            <summary>
            Sequence of the update
            </summary>
        </member>
        <member name="T:BinanceAPI.SocketSubClients.BinanceSocketClientSpot">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToAggregatedTradeUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade}})">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#aggregate-trade-streams</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToAggregatedTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamAggregatedTrade}})">
            <summary>
            Subscribes to the aggregated trades update stream for the provided symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#aggregate-trade-streams</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToTradeUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade}})">
            <summary>
            Subscribes to the trades update stream for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#trade-streams</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToTradeUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTrade}})">
            <summary>
            Subscribes to the trades update stream for the provided symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#trade-streams</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToKlineUpdatesAsync(System.String,BinanceAPI.Enums.KlineInterval,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData}})">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-streams</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToKlineUpdatesAsync(System.String,System.Collections.Generic.IEnumerable{BinanceAPI.Enums.KlineInterval},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData}})">
            <summary>
            Subscribes to the candlestick update stream for the provided symbol and intervals
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-streams</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},BinanceAPI.Enums.KlineInterval,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData}})">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and interval
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-streams</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="interval">The interval of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToKlineUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{BinanceAPI.Enums.KlineInterval},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamKlineData}})">
            <summary>
            Subscribes to the candlestick update stream for the provided symbols and intervals
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#kline-candlestick-streams</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="intervals">The intervals of the candlesticks</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToSymbolMiniTickerUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick}})">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream</para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToSymbolMiniTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick}})">
            <summary>
            Subscribes to mini ticker updates stream for a specific symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-mini-ticker-stream</para>
            </summary>
            <param name="symbols">The symbols to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToAllSymbolMiniTickerUpdatesAsync(System.Action{BinanceAPI.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamMiniTick}}})">
            <summary>
            Subscribes to mini ticker updates stream for all symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#all-market-mini-tickers-stream</para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice}})">
            <summary>
            Subscribes to the book ticker update stream for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-book-ticker-streams</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToBookTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice}})">
            <summary>
            Subscribes to the book ticker update stream for the provided symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-book-ticker-streams</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToAllBookTickerUpdatesAsync(System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamBookPrice}})">
            <summary>
            Subscribes to the book ticker update stream for all symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#all-book-tickers-stream</para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToPartialOrderBookUpdatesAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook}})">
            <summary>
            Subscribes to the depth updates for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#partial-book-depth-streams</para>
            </summary>
            <param name="symbol">The symbol to subscribe on</param>
            <param name="levels">The amount of entries to be returned in the update</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000. Defaults to 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToPartialOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Int32,System.Nullable{System.Int32},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketData.BinanceOrderBook}})">
            <summary>
            Subscribes to the depth updates for the provided symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#partial-book-depth-streams</para>
            </summary>
            <param name="symbols">The symbols to subscribe on</param>
            <param name="levels">The amount of entries to be returned in the update of each symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000. Defaults to 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToOrderBookUpdatesAsync(System.String,System.Nullable{System.Int32},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook}})">
            <summary>
            Subscribes to the order book updates for the provided symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#diff-depth-stream</para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000. Defaults to 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToOrderBookUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.Int32},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketData.BinanceEventOrderBook}})">
            <summary>
            Subscribes to the depth update stream for the provided symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#diff-depth-stream</para>
            </summary>
            <param name="symbols">The symbols</param>
            <param name="updateInterval">Update interval in milliseconds, either 100 or 1000. Defaults to 1000</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToSymbolTickerUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick}})">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-ticker-streams</para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToSymbolTickerUpdatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick}})">
            <summary>
            Subscribes to ticker updates stream for a specific symbol
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#individual-symbol-ticker-streams</para>
            </summary>
            <param name="symbols">The symbols to subscribe to</param>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToAllSymbolTickerUpdatesAsync(System.Action{BinanceAPI.Sockets.DataEvent{System.Collections.Generic.IEnumerable{BinanceAPI.Objects.Spot.MarketStream.BinanceStreamTick}}})">
            <summary>
            Subscribes to ticker updates stream for all symbols
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#all-market-tickers-stream</para>
            </summary>
            <param name="onMessage">The event handler for the received data</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:BinanceAPI.SocketSubClients.BinanceSocketClientSpot.SubscribeToUserDataUpdatesAsync(System.String,System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderUpdate}},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.UserStream.BinanceStreamOrderList}},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.UserStream.BinanceStreamPositionsUpdate}},System.Action{BinanceAPI.Sockets.DataEvent{BinanceAPI.Objects.Spot.UserStream.BinanceStreamBalanceUpdate}})">
            <summary>
            Subscribes to the account update stream. Prior to using this, the BinanceClient.Spot.UserStreams.StartUserStream method should be called.
            <para>[WSS] https://binance-docs.github.io/apidocs/spot/en/#user-data-streams</para>
            </summary>
            <param name="listenKey">Listen key retrieved by the StartUserStream method</param>
            <param name="onOrderUpdateMessage">The event handler for whenever an order status update is received</param>
            <param name="onOcoOrderUpdateMessage">The event handler for whenever an oco order status update is received</param>
            <param name="onAccountPositionMessage">The event handler for whenever an account position update is received. Account position updates are a list of changed funds</param>
            <param name="onAccountBalanceUpdate">The event handler for whenever a deposit or withdrawal has been processed and the account balance has changed</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is allowed as an input even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.AllowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>
                Specifies that <see langword="null"/> is disallowed as an input even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DisallowNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>
                Specifies that a method that will never return under any circumstance.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>
                Specifies that the method will not return if the associated <see cref="T:System.Boolean"/>
                parameter is passed the specified value.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>
                Gets the condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute"/>
                class with the specified parameter value.
            </summary>
            <param name="parameterValue">
                The condition parameter value.
                Code after the method is considered unreachable by diagnostics if the argument
                to the associated parameter matches this value.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>
                Specifies that an output may be <see langword="null"/> even if the
                corresponding type disallows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>,
                the parameter may be <see langword="null"/> even if the corresponding type disallows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                 Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter may be <see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>
                Specifies that an output is not <see langword="null"/> even if the
                corresponding type allows it.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullAttribute.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:System.Diagnostics.CodeAnalysis.NotNullAttribute"/> class.
            </summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>
                Specifies that the output will be non-<see langword="null"/> if the
                named parameter is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>
                Gets the associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>
                Initializes the attribute with the associated parameter name.
            </summary>
            <param name="parameterName">
                The associated parameter name.
                The output will be non-<see langword="null"/> if the argument to the
                parameter specified is non-<see langword="null"/>.
            </param>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>
                Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>,
                the parameter will not be <see langword="null"/> even if the corresponding type allows it.
            </summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>
                Gets the return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>
                Initializes the attribute with the specified return value condition.
            </summary>
            <param name="returnValue">
                The return value condition.
                If the method returns this value, the associated parameter will not be <see langword="null"/>.
            </param>
        </member>
    </members>
</doc>
